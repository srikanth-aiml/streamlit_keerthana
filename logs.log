2023-08-05 12:20:40,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-05 12:20:40,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-05 12:20:40,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-05 12:20:40,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-05 12:24:05,507:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2023-08-05 12:24:13,507:INFO:PyCaret RegressionExperiment
2023-08-05 12:24:13,507:INFO:Logging name: reg-default-name
2023-08-05 12:24:13,507:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-05 12:24:13,507:INFO:version 3.0.4
2023-08-05 12:24:13,507:INFO:Initializing setup()
2023-08-05 12:24:13,508:INFO:self.USI: d3d5
2023-08-05 12:24:13,508:INFO:self._variable_keys: {'fold_generator', 'fold_shuffle_param', 'X_test', 'y_test', 'exp_id', 'logging_param', 'exp_name_log', 'y_train', 'X_train', 'transform_target_param', 'log_plots_param', 'target_param', 'gpu_param', 'idx', 'fold_groups_param', 'seed', 'y', '_available_plots', 'html_param', 'memory', 'USI', 'data', 'n_jobs_param', 'X', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline'}
2023-08-05 12:24:13,508:INFO:Checking environment
2023-08-05 12:24:13,508:INFO:python_version: 3.10.5
2023-08-05 12:24:13,509:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-08-05 12:24:13,509:INFO:machine: AMD64
2023-08-05 12:24:13,509:INFO:platform: Windows-10-10.0.19045-SP0
2023-08-05 12:24:13,514:INFO:Memory: svmem(total=17039134720, available=6782091264, percent=60.2, used=10257043456, free=6782091264)
2023-08-05 12:24:13,515:INFO:Physical Core: 2
2023-08-05 12:24:13,515:INFO:Logical Core: 4
2023-08-05 12:24:13,515:INFO:Checking libraries
2023-08-05 12:24:13,516:INFO:System:
2023-08-05 12:24:13,516:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-08-05 12:24:13,516:INFO:executable: c:\Users\user\AppData\Local\Programs\Python\Python310\python.exe
2023-08-05 12:24:13,516:INFO:   machine: Windows-10-10.0.19045-SP0
2023-08-05 12:24:13,516:INFO:PyCaret required dependencies:
2023-08-05 12:24:13,568:INFO:                 pip: 23.2.1
2023-08-05 12:24:13,568:INFO:          setuptools: 58.1.0
2023-08-05 12:24:13,568:INFO:             pycaret: 3.0.4
2023-08-05 12:24:13,568:INFO:             IPython: 8.14.0
2023-08-05 12:24:13,568:INFO:          ipywidgets: 8.1.0
2023-08-05 12:24:13,568:INFO:                tqdm: 4.65.0
2023-08-05 12:24:13,568:INFO:               numpy: 1.22.4
2023-08-05 12:24:13,569:INFO:              pandas: 1.5.3
2023-08-05 12:24:13,569:INFO:              jinja2: 3.1.2
2023-08-05 12:24:13,569:INFO:               scipy: 1.8.1
2023-08-05 12:24:13,569:INFO:              joblib: 1.3.1
2023-08-05 12:24:13,569:INFO:             sklearn: 1.1.1
2023-08-05 12:24:13,569:INFO:                pyod: 1.1.0
2023-08-05 12:24:13,569:INFO:            imblearn: 0.11.0
2023-08-05 12:24:13,569:INFO:   category_encoders: 2.6.1
2023-08-05 12:24:13,569:INFO:            lightgbm: 4.0.0
2023-08-05 12:24:13,569:INFO:               numba: 0.57.1
2023-08-05 12:24:13,569:INFO:            requests: 2.27.1
2023-08-05 12:24:13,569:INFO:          matplotlib: 3.7.2
2023-08-05 12:24:13,569:INFO:          scikitplot: 0.3.7
2023-08-05 12:24:13,569:INFO:         yellowbrick: 1.5
2023-08-05 12:24:13,569:INFO:              plotly: 5.15.0
2023-08-05 12:24:13,570:INFO:    plotly-resampler: Not installed
2023-08-05 12:24:13,570:INFO:             kaleido: 0.2.1
2023-08-05 12:24:13,570:INFO:           schemdraw: 0.15
2023-08-05 12:24:13,570:INFO:         statsmodels: 0.14.0
2023-08-05 12:24:13,570:INFO:              sktime: 0.21.0
2023-08-05 12:24:13,570:INFO:               tbats: 1.1.3
2023-08-05 12:24:13,570:INFO:            pmdarima: 2.0.3
2023-08-05 12:24:13,570:INFO:              psutil: 5.9.5
2023-08-05 12:24:13,570:INFO:          markupsafe: 2.1.3
2023-08-05 12:24:13,570:INFO:             pickle5: Not installed
2023-08-05 12:24:13,570:INFO:         cloudpickle: 2.2.1
2023-08-05 12:24:13,570:INFO:         deprecation: 2.1.0
2023-08-05 12:24:13,570:INFO:              xxhash: 3.3.0
2023-08-05 12:24:13,571:INFO:           wurlitzer: Not installed
2023-08-05 12:24:13,571:INFO:PyCaret optional dependencies:
2023-08-05 12:24:13,617:INFO:                shap: Not installed
2023-08-05 12:24:13,618:INFO:           interpret: Not installed
2023-08-05 12:24:13,618:INFO:                umap: Not installed
2023-08-05 12:24:13,618:INFO:    pandas_profiling: Not installed
2023-08-05 12:24:13,618:INFO:  explainerdashboard: Not installed
2023-08-05 12:24:13,618:INFO:             autoviz: Not installed
2023-08-05 12:24:13,618:INFO:           fairlearn: Not installed
2023-08-05 12:24:13,618:INFO:          deepchecks: Not installed
2023-08-05 12:24:13,618:INFO:             xgboost: Not installed
2023-08-05 12:24:13,618:INFO:            catboost: Not installed
2023-08-05 12:24:13,618:INFO:              kmodes: Not installed
2023-08-05 12:24:13,618:INFO:             mlxtend: Not installed
2023-08-05 12:24:13,618:INFO:       statsforecast: Not installed
2023-08-05 12:24:13,618:INFO:        tune_sklearn: Not installed
2023-08-05 12:24:13,618:INFO:                 ray: Not installed
2023-08-05 12:24:13,619:INFO:            hyperopt: Not installed
2023-08-05 12:24:13,619:INFO:              optuna: Not installed
2023-08-05 12:24:13,619:INFO:               skopt: Not installed
2023-08-05 12:24:13,619:INFO:              mlflow: Not installed
2023-08-05 12:24:13,619:INFO:              gradio: Not installed
2023-08-05 12:24:13,619:INFO:             fastapi: Not installed
2023-08-05 12:24:13,619:INFO:             uvicorn: Not installed
2023-08-05 12:24:13,619:INFO:              m2cgen: Not installed
2023-08-05 12:24:13,619:INFO:           evidently: Not installed
2023-08-05 12:24:13,619:INFO:               fugue: Not installed
2023-08-05 12:24:13,619:INFO:           streamlit: Not installed
2023-08-05 12:24:13,619:INFO:             prophet: Not installed
2023-08-05 12:24:13,619:INFO:None
2023-08-05 12:24:13,619:INFO:Set up data.
2023-08-05 12:24:13,627:INFO:Set up train/test split.
2023-08-05 12:24:13,636:INFO:Set up index.
2023-08-05 12:24:13,636:INFO:Set up folding strategy.
2023-08-05 12:24:13,636:INFO:Assigning column types.
2023-08-05 12:24:13,641:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-05 12:24:13,641:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,651:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,663:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,854:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:13,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:13,856:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,864:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,872:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:13,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,057:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-05 12:24:14,066:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,073:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,326:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,337:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,602:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-05 12:24:14,618:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:14,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-05 12:24:14,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,010:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-05 12:24:15,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-05 12:24:15,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,878:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-05 12:24:15,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:15,960:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-05 12:24:16,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:16,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:16,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:16,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:16,469:INFO:Preparing preprocessing pipeline...
2023-08-05 12:24:16,469:INFO:Set up simple imputation.
2023-08-05 12:24:16,476:INFO:Set up encoding of ordinal features.
2023-08-05 12:24:16,484:INFO:Set up encoding of categorical features.
2023-08-05 12:24:16,485:INFO:Set up column transformation.
2023-08-05 12:24:16,485:INFO:Set up feature normalization.
2023-08-05 12:24:16,690:INFO:Finished creating preprocessing pipeline.
2023-08-05 12:24:16,760:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-08-05 12:24:16,760:INFO:Creating final display dataframe.
2023-08-05 12:24:17,185:INFO:Setup _display_container:                     Description             Value
0                    Session id               145
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape        (1070, 10)
6    Transformed test set shape         (268, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Transformation              True
17        Transformation method       yeo-johnson
18                    Normalize              True
19             Normalize method            zscore
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              d3d5
2023-08-05 12:24:17,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:17,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:17,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:17,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-05 12:24:17,806:INFO:setup() successfully completed in 4.3s...............
2023-08-05 12:24:25,759:INFO:Initializing get_config()
2023-08-05 12:24:25,760:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, variable=X_transformed)
2023-08-05 12:24:26,303:INFO:Variable: X returned as            age       sex       bmi  children    smoker  region_northeast   
1155 -0.162169 -1.038109 -1.456902  1.355620 -0.508747          1.742910  \
575   1.286189 -1.038109 -0.536170 -1.074594 -0.508747         -0.573753   
112  -0.090278  0.963290  0.074695 -1.074594 -0.508747         -0.573753   
583  -0.457355 -1.038109 -1.169611  0.293058 -0.508747         -0.573753   
436  -1.261757  0.963290  0.225194 -1.074594 -0.508747          1.742910   
...        ...       ...       ...       ...       ...               ...   
855  -1.437415 -1.038109 -0.122970 -1.074594 -0.508747         -0.573753   
420   1.643458  0.963290  0.564706 -1.074594  1.965613         -0.573753   
1010  0.658729 -1.038109 -1.329612 -1.074594 -0.508747         -0.573753   
92    1.346648  0.963290 -0.084771  1.355620  1.965613          1.742910   
972  -1.261757 -1.038109 -1.831613 -1.074594 -0.508747         -0.573753   

      region_northwest  region_southwest  region_southeast  
1155         -0.572314         -0.569436         -0.593901  
575           1.747292         -0.569436         -0.593901  
112          -0.572314          1.756123         -0.593901  
583          -0.572314         -0.569436          1.683783  
436          -0.572314         -0.569436         -0.593901  
...                ...               ...               ...  
855          -0.572314          1.756123         -0.593901  
420          -0.572314         -0.569436          1.683783  
1010         -0.572314          1.756123         -0.593901  
92           -0.572314         -0.569436         -0.593901  
972           1.747292         -0.569436         -0.593901  

[1338 rows x 9 columns]
2023-08-05 12:24:26,303:INFO:get_config() successfully completed......................................
2023-08-05 12:24:31,382:INFO:Initializing compare_models()
2023-08-05 12:24:31,382:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-08-05 12:24:31,382:INFO:Checking exceptions
2023-08-05 12:24:31,388:INFO:Preparing display monitor
2023-08-05 12:24:31,455:INFO:Initializing Linear Regression
2023-08-05 12:24:31,456:INFO:Total runtime is 0.0 minutes
2023-08-05 12:24:31,464:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:31,465:INFO:Initializing create_model()
2023-08-05 12:24:31,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:31,466:INFO:Checking exceptions
2023-08-05 12:24:31,466:INFO:Importing libraries
2023-08-05 12:24:31,467:INFO:Copying training dataset
2023-08-05 12:24:31,479:INFO:Defining folds
2023-08-05 12:24:31,479:INFO:Declaring metric variables
2023-08-05 12:24:31,486:INFO:Importing untrained model
2023-08-05 12:24:31,498:INFO:Linear Regression Imported successfully
2023-08-05 12:24:31,519:INFO:Starting cross validation
2023-08-05 12:24:31,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:41,444:INFO:Calculating mean and std
2023-08-05 12:24:41,446:INFO:Creating metrics dataframe
2023-08-05 12:24:41,461:INFO:Uploading results into container
2023-08-05 12:24:41,463:INFO:Uploading model into container now
2023-08-05 12:24:41,463:INFO:_master_model_container: 1
2023-08-05 12:24:41,464:INFO:_display_container: 2
2023-08-05 12:24:41,464:INFO:LinearRegression(n_jobs=-1)
2023-08-05 12:24:41,464:INFO:create_model() successfully completed......................................
2023-08-05 12:24:41,595:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:41,595:INFO:Creating metrics dataframe
2023-08-05 12:24:41,613:INFO:Initializing Lasso Regression
2023-08-05 12:24:41,613:INFO:Total runtime is 0.16930545171101888 minutes
2023-08-05 12:24:41,621:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:41,622:INFO:Initializing create_model()
2023-08-05 12:24:41,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:41,622:INFO:Checking exceptions
2023-08-05 12:24:41,622:INFO:Importing libraries
2023-08-05 12:24:41,622:INFO:Copying training dataset
2023-08-05 12:24:41,635:INFO:Defining folds
2023-08-05 12:24:41,635:INFO:Declaring metric variables
2023-08-05 12:24:41,650:INFO:Importing untrained model
2023-08-05 12:24:41,668:INFO:Lasso Regression Imported successfully
2023-08-05 12:24:41,686:INFO:Starting cross validation
2023-08-05 12:24:41,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:44,230:INFO:Calculating mean and std
2023-08-05 12:24:44,233:INFO:Creating metrics dataframe
2023-08-05 12:24:44,258:INFO:Uploading results into container
2023-08-05 12:24:44,260:INFO:Uploading model into container now
2023-08-05 12:24:44,261:INFO:_master_model_container: 2
2023-08-05 12:24:44,261:INFO:_display_container: 2
2023-08-05 12:24:44,261:INFO:Lasso(random_state=145)
2023-08-05 12:24:44,262:INFO:create_model() successfully completed......................................
2023-08-05 12:24:44,406:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:44,407:INFO:Creating metrics dataframe
2023-08-05 12:24:44,424:INFO:Initializing Ridge Regression
2023-08-05 12:24:44,425:INFO:Total runtime is 0.2161712408065796 minutes
2023-08-05 12:24:44,432:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:44,433:INFO:Initializing create_model()
2023-08-05 12:24:44,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:44,433:INFO:Checking exceptions
2023-08-05 12:24:44,433:INFO:Importing libraries
2023-08-05 12:24:44,434:INFO:Copying training dataset
2023-08-05 12:24:44,445:INFO:Defining folds
2023-08-05 12:24:44,445:INFO:Declaring metric variables
2023-08-05 12:24:44,458:INFO:Importing untrained model
2023-08-05 12:24:44,470:INFO:Ridge Regression Imported successfully
2023-08-05 12:24:44,490:INFO:Starting cross validation
2023-08-05 12:24:44,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:46,853:INFO:Calculating mean and std
2023-08-05 12:24:46,858:INFO:Creating metrics dataframe
2023-08-05 12:24:46,879:INFO:Uploading results into container
2023-08-05 12:24:46,880:INFO:Uploading model into container now
2023-08-05 12:24:46,881:INFO:_master_model_container: 3
2023-08-05 12:24:46,881:INFO:_display_container: 2
2023-08-05 12:24:46,881:INFO:Ridge(random_state=145)
2023-08-05 12:24:46,881:INFO:create_model() successfully completed......................................
2023-08-05 12:24:46,967:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:46,967:INFO:Creating metrics dataframe
2023-08-05 12:24:46,981:INFO:Initializing Elastic Net
2023-08-05 12:24:46,981:INFO:Total runtime is 0.25877285401026406 minutes
2023-08-05 12:24:46,987:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:46,987:INFO:Initializing create_model()
2023-08-05 12:24:46,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:46,987:INFO:Checking exceptions
2023-08-05 12:24:46,988:INFO:Importing libraries
2023-08-05 12:24:46,988:INFO:Copying training dataset
2023-08-05 12:24:46,996:INFO:Defining folds
2023-08-05 12:24:46,996:INFO:Declaring metric variables
2023-08-05 12:24:47,002:INFO:Importing untrained model
2023-08-05 12:24:47,013:INFO:Elastic Net Imported successfully
2023-08-05 12:24:47,033:INFO:Starting cross validation
2023-08-05 12:24:47,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:49,467:INFO:Calculating mean and std
2023-08-05 12:24:49,469:INFO:Creating metrics dataframe
2023-08-05 12:24:49,500:INFO:Uploading results into container
2023-08-05 12:24:49,501:INFO:Uploading model into container now
2023-08-05 12:24:49,501:INFO:_master_model_container: 4
2023-08-05 12:24:49,501:INFO:_display_container: 2
2023-08-05 12:24:49,502:INFO:ElasticNet(random_state=145)
2023-08-05 12:24:49,502:INFO:create_model() successfully completed......................................
2023-08-05 12:24:49,603:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:49,603:INFO:Creating metrics dataframe
2023-08-05 12:24:49,624:INFO:Initializing Least Angle Regression
2023-08-05 12:24:49,624:INFO:Total runtime is 0.3028304060300191 minutes
2023-08-05 12:24:49,633:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:49,634:INFO:Initializing create_model()
2023-08-05 12:24:49,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:49,634:INFO:Checking exceptions
2023-08-05 12:24:49,634:INFO:Importing libraries
2023-08-05 12:24:49,635:INFO:Copying training dataset
2023-08-05 12:24:49,667:INFO:Defining folds
2023-08-05 12:24:49,667:INFO:Declaring metric variables
2023-08-05 12:24:49,679:INFO:Importing untrained model
2023-08-05 12:24:49,686:INFO:Least Angle Regression Imported successfully
2023-08-05 12:24:49,700:INFO:Starting cross validation
2023-08-05 12:24:49,704:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:50,143:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:50,153:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:50,162:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:50,170:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,085:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,085:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,119:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,141:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,862:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:51,883:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:52,203:INFO:Calculating mean and std
2023-08-05 12:24:52,206:INFO:Creating metrics dataframe
2023-08-05 12:24:52,248:INFO:Uploading results into container
2023-08-05 12:24:52,249:INFO:Uploading model into container now
2023-08-05 12:24:52,250:INFO:_master_model_container: 5
2023-08-05 12:24:52,250:INFO:_display_container: 2
2023-08-05 12:24:52,250:INFO:Lars(random_state=145)
2023-08-05 12:24:52,251:INFO:create_model() successfully completed......................................
2023-08-05 12:24:52,336:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:52,336:INFO:Creating metrics dataframe
2023-08-05 12:24:52,350:INFO:Initializing Lasso Least Angle Regression
2023-08-05 12:24:52,351:INFO:Total runtime is 0.3482815345128377 minutes
2023-08-05 12:24:52,358:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:52,358:INFO:Initializing create_model()
2023-08-05 12:24:52,359:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:52,359:INFO:Checking exceptions
2023-08-05 12:24:52,359:INFO:Importing libraries
2023-08-05 12:24:52,359:INFO:Copying training dataset
2023-08-05 12:24:52,366:INFO:Defining folds
2023-08-05 12:24:52,367:INFO:Declaring metric variables
2023-08-05 12:24:52,374:INFO:Importing untrained model
2023-08-05 12:24:52,382:INFO:Lasso Least Angle Regression Imported successfully
2023-08-05 12:24:52,401:INFO:Starting cross validation
2023-08-05 12:24:52,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:52,833:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:52,840:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:52,841:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:52,862:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:53,800:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:53,834:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:53,850:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:53,883:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:54,623:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:54,633:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-05 12:24:54,799:INFO:Calculating mean and std
2023-08-05 12:24:54,801:INFO:Creating metrics dataframe
2023-08-05 12:24:54,845:INFO:Uploading results into container
2023-08-05 12:24:54,846:INFO:Uploading model into container now
2023-08-05 12:24:54,846:INFO:_master_model_container: 6
2023-08-05 12:24:54,846:INFO:_display_container: 2
2023-08-05 12:24:54,847:INFO:LassoLars(random_state=145)
2023-08-05 12:24:54,847:INFO:create_model() successfully completed......................................
2023-08-05 12:24:54,931:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:54,931:INFO:Creating metrics dataframe
2023-08-05 12:24:54,944:INFO:Initializing Orthogonal Matching Pursuit
2023-08-05 12:24:54,945:INFO:Total runtime is 0.3914992928504944 minutes
2023-08-05 12:24:54,950:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:54,951:INFO:Initializing create_model()
2023-08-05 12:24:54,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:54,951:INFO:Checking exceptions
2023-08-05 12:24:54,951:INFO:Importing libraries
2023-08-05 12:24:54,951:INFO:Copying training dataset
2023-08-05 12:24:54,962:INFO:Defining folds
2023-08-05 12:24:54,962:INFO:Declaring metric variables
2023-08-05 12:24:54,968:INFO:Importing untrained model
2023-08-05 12:24:54,976:INFO:Orthogonal Matching Pursuit Imported successfully
2023-08-05 12:24:54,998:INFO:Starting cross validation
2023-08-05 12:24:55,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:24:55,426:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:55,432:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:55,433:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:55,460:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:56,388:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:56,391:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:56,411:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:56,427:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:57,245:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:57,256:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-05 12:24:57,418:INFO:Calculating mean and std
2023-08-05 12:24:57,423:INFO:Creating metrics dataframe
2023-08-05 12:24:57,473:INFO:Uploading results into container
2023-08-05 12:24:57,474:INFO:Uploading model into container now
2023-08-05 12:24:57,474:INFO:_master_model_container: 7
2023-08-05 12:24:57,474:INFO:_display_container: 2
2023-08-05 12:24:57,475:INFO:OrthogonalMatchingPursuit()
2023-08-05 12:24:57,475:INFO:create_model() successfully completed......................................
2023-08-05 12:24:57,568:INFO:SubProcess create_model() end ==================================
2023-08-05 12:24:57,568:INFO:Creating metrics dataframe
2023-08-05 12:24:57,589:INFO:Initializing Bayesian Ridge
2023-08-05 12:24:57,589:INFO:Total runtime is 0.43557606140772503 minutes
2023-08-05 12:24:57,597:INFO:SubProcess create_model() called ==================================
2023-08-05 12:24:57,598:INFO:Initializing create_model()
2023-08-05 12:24:57,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:24:57,598:INFO:Checking exceptions
2023-08-05 12:24:57,598:INFO:Importing libraries
2023-08-05 12:24:57,599:INFO:Copying training dataset
2023-08-05 12:24:57,612:INFO:Defining folds
2023-08-05 12:24:57,612:INFO:Declaring metric variables
2023-08-05 12:24:57,620:INFO:Importing untrained model
2023-08-05 12:24:57,629:INFO:Bayesian Ridge Imported successfully
2023-08-05 12:24:57,646:INFO:Starting cross validation
2023-08-05 12:24:57,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:00,598:INFO:Calculating mean and std
2023-08-05 12:25:00,602:INFO:Creating metrics dataframe
2023-08-05 12:25:00,665:INFO:Uploading results into container
2023-08-05 12:25:00,666:INFO:Uploading model into container now
2023-08-05 12:25:00,666:INFO:_master_model_container: 8
2023-08-05 12:25:00,667:INFO:_display_container: 2
2023-08-05 12:25:00,667:INFO:BayesianRidge()
2023-08-05 12:25:00,667:INFO:create_model() successfully completed......................................
2023-08-05 12:25:00,753:INFO:SubProcess create_model() end ==================================
2023-08-05 12:25:00,753:INFO:Creating metrics dataframe
2023-08-05 12:25:00,767:INFO:Initializing Passive Aggressive Regressor
2023-08-05 12:25:00,767:INFO:Total runtime is 0.4885377605756124 minutes
2023-08-05 12:25:00,774:INFO:SubProcess create_model() called ==================================
2023-08-05 12:25:00,774:INFO:Initializing create_model()
2023-08-05 12:25:00,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:00,775:INFO:Checking exceptions
2023-08-05 12:25:00,775:INFO:Importing libraries
2023-08-05 12:25:00,775:INFO:Copying training dataset
2023-08-05 12:25:00,782:INFO:Defining folds
2023-08-05 12:25:00,782:INFO:Declaring metric variables
2023-08-05 12:25:00,791:INFO:Importing untrained model
2023-08-05 12:25:00,798:INFO:Passive Aggressive Regressor Imported successfully
2023-08-05 12:25:00,854:INFO:Starting cross validation
2023-08-05 12:25:00,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:03,788:INFO:Calculating mean and std
2023-08-05 12:25:03,791:INFO:Creating metrics dataframe
2023-08-05 12:25:03,881:INFO:Uploading results into container
2023-08-05 12:25:03,882:INFO:Uploading model into container now
2023-08-05 12:25:03,884:INFO:_master_model_container: 9
2023-08-05 12:25:03,886:INFO:_display_container: 2
2023-08-05 12:25:03,887:INFO:PassiveAggressiveRegressor(random_state=145)
2023-08-05 12:25:03,887:INFO:create_model() successfully completed......................................
2023-08-05 12:25:03,973:INFO:SubProcess create_model() end ==================================
2023-08-05 12:25:03,973:INFO:Creating metrics dataframe
2023-08-05 12:25:03,988:INFO:Initializing Huber Regressor
2023-08-05 12:25:03,988:INFO:Total runtime is 0.5422221144040426 minutes
2023-08-05 12:25:03,993:INFO:SubProcess create_model() called ==================================
2023-08-05 12:25:03,994:INFO:Initializing create_model()
2023-08-05 12:25:03,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:03,994:INFO:Checking exceptions
2023-08-05 12:25:03,994:INFO:Importing libraries
2023-08-05 12:25:03,995:INFO:Copying training dataset
2023-08-05 12:25:04,004:INFO:Defining folds
2023-08-05 12:25:04,005:INFO:Declaring metric variables
2023-08-05 12:25:04,014:INFO:Importing untrained model
2023-08-05 12:25:04,026:INFO:Huber Regressor Imported successfully
2023-08-05 12:25:04,049:INFO:Starting cross validation
2023-08-05 12:25:04,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:06,863:INFO:Calculating mean and std
2023-08-05 12:25:06,866:INFO:Creating metrics dataframe
2023-08-05 12:25:06,957:INFO:Uploading results into container
2023-08-05 12:25:06,958:INFO:Uploading model into container now
2023-08-05 12:25:06,958:INFO:_master_model_container: 10
2023-08-05 12:25:06,959:INFO:_display_container: 2
2023-08-05 12:25:06,959:INFO:HuberRegressor()
2023-08-05 12:25:06,959:INFO:create_model() successfully completed......................................
2023-08-05 12:25:07,060:INFO:SubProcess create_model() end ==================================
2023-08-05 12:25:07,060:INFO:Creating metrics dataframe
2023-08-05 12:25:07,076:INFO:Initializing K Neighbors Regressor
2023-08-05 12:25:07,077:INFO:Total runtime is 0.5937137047449748 minutes
2023-08-05 12:25:07,082:INFO:SubProcess create_model() called ==================================
2023-08-05 12:25:07,082:INFO:Initializing create_model()
2023-08-05 12:25:07,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:07,084:INFO:Checking exceptions
2023-08-05 12:25:07,084:INFO:Importing libraries
2023-08-05 12:25:07,085:INFO:Copying training dataset
2023-08-05 12:25:07,095:INFO:Defining folds
2023-08-05 12:25:07,096:INFO:Declaring metric variables
2023-08-05 12:25:07,105:INFO:Importing untrained model
2023-08-05 12:25:07,118:INFO:K Neighbors Regressor Imported successfully
2023-08-05 12:25:07,140:INFO:Starting cross validation
2023-08-05 12:25:07,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:10,269:INFO:Calculating mean and std
2023-08-05 12:25:10,273:INFO:Creating metrics dataframe
2023-08-05 12:25:10,362:INFO:Uploading results into container
2023-08-05 12:25:10,363:INFO:Uploading model into container now
2023-08-05 12:25:10,364:INFO:_master_model_container: 11
2023-08-05 12:25:10,364:INFO:_display_container: 2
2023-08-05 12:25:10,365:INFO:KNeighborsRegressor(n_jobs=-1)
2023-08-05 12:25:10,365:INFO:create_model() successfully completed......................................
2023-08-05 12:25:10,453:INFO:SubProcess create_model() end ==================================
2023-08-05 12:25:10,453:INFO:Creating metrics dataframe
2023-08-05 12:25:10,471:INFO:Initializing Decision Tree Regressor
2023-08-05 12:25:10,472:INFO:Total runtime is 0.6502851684888203 minutes
2023-08-05 12:25:10,479:INFO:SubProcess create_model() called ==================================
2023-08-05 12:25:10,479:INFO:Initializing create_model()
2023-08-05 12:25:10,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:10,480:INFO:Checking exceptions
2023-08-05 12:25:10,480:INFO:Importing libraries
2023-08-05 12:25:10,480:INFO:Copying training dataset
2023-08-05 12:25:10,491:INFO:Defining folds
2023-08-05 12:25:10,491:INFO:Declaring metric variables
2023-08-05 12:25:10,498:INFO:Importing untrained model
2023-08-05 12:25:10,508:INFO:Decision Tree Regressor Imported successfully
2023-08-05 12:25:10,563:INFO:Starting cross validation
2023-08-05 12:25:10,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:13,502:INFO:Calculating mean and std
2023-08-05 12:25:13,505:INFO:Creating metrics dataframe
2023-08-05 12:25:13,602:INFO:Uploading results into container
2023-08-05 12:25:13,603:INFO:Uploading model into container now
2023-08-05 12:25:13,604:INFO:_master_model_container: 12
2023-08-05 12:25:13,604:INFO:_display_container: 2
2023-08-05 12:25:13,604:INFO:DecisionTreeRegressor(random_state=145)
2023-08-05 12:25:13,604:INFO:create_model() successfully completed......................................
2023-08-05 12:25:13,693:INFO:SubProcess create_model() end ==================================
2023-08-05 12:25:13,693:INFO:Creating metrics dataframe
2023-08-05 12:25:13,708:INFO:Initializing Random Forest Regressor
2023-08-05 12:25:13,709:INFO:Total runtime is 0.70424352089564 minutes
2023-08-05 12:25:13,714:INFO:SubProcess create_model() called ==================================
2023-08-05 12:25:13,715:INFO:Initializing create_model()
2023-08-05 12:25:13,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002087FAC2950>, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:13,717:INFO:Checking exceptions
2023-08-05 12:25:13,717:INFO:Importing libraries
2023-08-05 12:25:13,717:INFO:Copying training dataset
2023-08-05 12:25:13,726:INFO:Defining folds
2023-08-05 12:25:13,726:INFO:Declaring metric variables
2023-08-05 12:25:13,734:INFO:Importing untrained model
2023-08-05 12:25:13,745:INFO:Random Forest Regressor Imported successfully
2023-08-05 12:25:13,765:INFO:Starting cross validation
2023-08-05 12:25:13,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:24,376:INFO:Initializing create_model()
2023-08-05 12:25:24,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=gbr, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-05 12:25:24,377:INFO:Checking exceptions
2023-08-05 12:25:24,417:INFO:Importing libraries
2023-08-05 12:25:24,418:INFO:Copying training dataset
2023-08-05 12:25:24,430:INFO:Defining folds
2023-08-05 12:25:24,431:INFO:Declaring metric variables
2023-08-05 12:25:24,438:INFO:Importing untrained model
2023-08-05 12:25:24,449:INFO:Gradient Boosting Regressor Imported successfully
2023-08-05 12:25:24,468:INFO:Starting cross validation
2023-08-05 12:25:24,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-05 12:25:32,980:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:33,003:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:33,542:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:37,429:INFO:Calculating mean and std
2023-08-05 12:25:37,433:INFO:Creating metrics dataframe
2023-08-05 12:25:37,450:INFO:Finalizing model
2023-08-05 12:25:38,115:INFO:Uploading results into container
2023-08-05 12:25:38,117:INFO:Uploading model into container now
2023-08-05 12:25:38,147:INFO:_master_model_container: 13
2023-08-05 12:25:38,148:INFO:_display_container: 2
2023-08-05 12:25:38,149:INFO:GradientBoostingRegressor(random_state=145)
2023-08-05 12:25:38,149:INFO:create_model() successfully completed......................................
2023-08-05 12:25:38,300:INFO:Initializing tune_model()
2023-08-05 12:25:38,300:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=145), fold=10, round=4, n_iter=100, custom_grid={'learning_rate': [0.05, 0.08, 0.1], 'max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'subsample': [0.8, 0.9, 1, 1.1], 'n_estimators': [100, 200, 300, 400, 500]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>)
2023-08-05 12:25:38,301:INFO:Checking exceptions
2023-08-05 12:25:38,348:INFO:Copying training dataset
2023-08-05 12:25:38,354:INFO:Checking base model
2023-08-05 12:25:38,354:INFO:Base model : Gradient Boosting Regressor
2023-08-05 12:25:38,367:INFO:Declaring metric variables
2023-08-05 12:25:38,375:INFO:Defining Hyperparameters
2023-08-05 12:25:38,508:INFO:custom_grid: {'actual_estimator__learning_rate': [0.05, 0.08, 0.1], 'actual_estimator__max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'actual_estimator__subsample': [0.8, 0.9, 1, 1.1], 'actual_estimator__n_estimators': [100, 200, 300, 400, 500]}
2023-08-05 12:25:38,508:INFO:Tuning with n_jobs=-1
2023-08-05 12:25:38,508:INFO:Initializing RandomizedSearchCV
2023-08-05 12:25:40,550:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:40,622:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:40,654:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:40,654:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:41,788:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:41,950:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:41,956:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:42,019:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:45,038:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:47,393:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:47,528:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:47,607:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:49,430:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:49,546:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:49,547:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:49,639:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:50,596:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:50,685:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:50,687:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:50,787:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:53,184:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:53,275:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:53,430:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:53,465:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:55,225:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:55,332:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:55,514:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:55,554:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:56,603:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:56,611:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:56,832:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:56,916:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:25:59,145:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:59,188:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:59,238:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:25:59,441:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:00,765:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:00,787:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:01,032:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:01,275:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:03,385:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:03,514:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:03,618:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:03,711:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:04,985:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:05,050:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:05,188:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:05,284:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-05 12:26:06,961:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-05 12:26:15,272:INFO:Initializing predict_model()
2023-08-05 12:26:15,272:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, estimator=GradientBoostingRegressor(random_state=145), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002080E4FE9E0>)
2023-08-05 12:26:15,272:INFO:Checking exceptions
2023-08-05 12:26:15,272:INFO:Preloading libraries
2023-08-05 12:26:25,132:INFO:Initializing plot_model()
2023-08-05 12:26:25,133:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=145), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080F3C47C0>, system=True)
2023-08-05 12:26:25,133:INFO:Checking exceptions
2023-08-05 12:26:25,145:INFO:Preloading libraries
2023-08-05 12:26:25,171:INFO:Copying training dataset
2023-08-05 12:26:25,171:INFO:Plot type: error
2023-08-05 12:26:25,404:INFO:Fitting Model
2023-08-05 12:26:25,408:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2023-08-05 12:26:25,409:INFO:Scoring test/hold-out set
2023-08-05 12:26:26,468:INFO:Visual Rendered Successfully
2023-08-05 12:26:26,980:INFO:plot_model() successfully completed......................................
2023-08-06 18:47:35,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:47:35,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:47:35,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:47:35,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:47:37,687:INFO:Initializing load_model()
2023-08-06 18:47:37,687:INFO:load_model(model_name=regression_model, platform=None, authentication=None, verbose=True)
2023-08-06 18:47:37,697:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,699:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,699:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,706:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DummyRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,706:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,706:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:47:37,783:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '58.1.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.8.1', 'joblib': '1.3.1', 'sklearn': '1.1.1', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.27.1', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.5', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.12.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-06 18:48:30,639:INFO:Initializing predict_model()
2023-08-06 18:48:30,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002210B2F5450>, estimator=Pipeline(memory=FastMemory(location=C:\Users\srikanth\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002217F3B7130>)
2023-08-06 18:48:30,639:INFO:Checking exceptions
2023-08-06 18:48:30,639:INFO:Preloading libraries
2023-08-06 18:48:30,643:INFO:Set up data.
2023-08-06 18:48:30,655:INFO:Set up index.
2023-08-06 18:51:11,063:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2023-08-06 18:51:13,962:INFO:PyCaret RegressionExperiment
2023-08-06 18:51:13,963:INFO:Logging name: reg-default-name
2023-08-06 18:51:13,963:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-06 18:51:13,963:INFO:version 3.0.4
2023-08-06 18:51:13,963:INFO:Initializing setup()
2023-08-06 18:51:13,963:INFO:self.USI: 5717
2023-08-06 18:51:13,963:INFO:self._variable_keys: {'fold_generator', 'fold_shuffle_param', 'X_test', 'y_test', 'exp_id', 'logging_param', 'exp_name_log', 'y_train', 'X_train', 'transform_target_param', 'log_plots_param', 'target_param', 'gpu_param', 'idx', 'fold_groups_param', 'seed', 'y', '_available_plots', 'html_param', 'memory', 'USI', 'data', 'n_jobs_param', 'X', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline'}
2023-08-06 18:51:13,964:INFO:Checking environment
2023-08-06 18:51:13,964:INFO:python_version: 3.10.5
2023-08-06 18:51:13,964:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-08-06 18:51:13,964:INFO:machine: AMD64
2023-08-06 18:51:13,964:INFO:platform: Windows-10-10.0.19045-SP0
2023-08-06 18:51:13,966:INFO:Memory: svmem(total=17039134720, available=6687793152, percent=60.8, used=10351341568, free=6687793152)
2023-08-06 18:51:13,966:INFO:Physical Core: 2
2023-08-06 18:51:13,966:INFO:Logical Core: 4
2023-08-06 18:51:13,966:INFO:Checking libraries
2023-08-06 18:51:13,966:INFO:System:
2023-08-06 18:51:13,966:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-08-06 18:51:13,966:INFO:executable: c:\Users\user\AppData\Local\Programs\Python\Python310\python.exe
2023-08-06 18:51:13,966:INFO:   machine: Windows-10-10.0.19045-SP0
2023-08-06 18:51:13,966:INFO:PyCaret required dependencies:
2023-08-06 18:51:13,966:INFO:                 pip: 23.2.1
2023-08-06 18:51:13,970:INFO:          setuptools: 58.1.0
2023-08-06 18:51:13,970:INFO:             pycaret: 3.0.4
2023-08-06 18:51:13,971:INFO:             IPython: 8.14.0
2023-08-06 18:51:13,971:INFO:          ipywidgets: 8.1.0
2023-08-06 18:51:13,971:INFO:                tqdm: 4.65.0
2023-08-06 18:51:13,971:INFO:               numpy: 1.22.4
2023-08-06 18:51:13,971:INFO:              pandas: 1.5.3
2023-08-06 18:51:13,971:INFO:              jinja2: 3.1.2
2023-08-06 18:51:13,972:INFO:               scipy: 1.8.1
2023-08-06 18:51:13,972:INFO:              joblib: 1.3.1
2023-08-06 18:51:13,972:INFO:             sklearn: 1.1.1
2023-08-06 18:51:13,972:INFO:                pyod: 1.1.0
2023-08-06 18:51:13,972:INFO:            imblearn: 0.11.0
2023-08-06 18:51:13,972:INFO:   category_encoders: 2.6.1
2023-08-06 18:51:13,973:INFO:            lightgbm: 4.0.0
2023-08-06 18:51:13,973:INFO:               numba: 0.57.1
2023-08-06 18:51:13,973:INFO:            requests: 2.27.1
2023-08-06 18:51:13,973:INFO:          matplotlib: 3.7.2
2023-08-06 18:51:13,974:INFO:          scikitplot: 0.3.7
2023-08-06 18:51:13,974:INFO:         yellowbrick: 1.5
2023-08-06 18:51:13,974:INFO:              plotly: 5.15.0
2023-08-06 18:51:13,974:INFO:    plotly-resampler: Not installed
2023-08-06 18:51:13,974:INFO:             kaleido: 0.2.1
2023-08-06 18:51:13,975:INFO:           schemdraw: 0.15
2023-08-06 18:51:13,975:INFO:         statsmodels: 0.14.0
2023-08-06 18:51:13,975:INFO:              sktime: 0.21.0
2023-08-06 18:51:13,975:INFO:               tbats: 1.1.3
2023-08-06 18:51:13,975:INFO:            pmdarima: 2.0.3
2023-08-06 18:51:13,975:INFO:              psutil: 5.9.5
2023-08-06 18:51:13,976:INFO:          markupsafe: 2.1.3
2023-08-06 18:51:13,976:INFO:             pickle5: Not installed
2023-08-06 18:51:13,976:INFO:         cloudpickle: 2.2.1
2023-08-06 18:51:13,976:INFO:         deprecation: 2.1.0
2023-08-06 18:51:13,976:INFO:              xxhash: 3.3.0
2023-08-06 18:51:13,976:INFO:           wurlitzer: Not installed
2023-08-06 18:51:13,977:INFO:PyCaret optional dependencies:
2023-08-06 18:51:13,977:INFO:                shap: Not installed
2023-08-06 18:51:13,977:INFO:           interpret: Not installed
2023-08-06 18:51:13,977:INFO:                umap: Not installed
2023-08-06 18:51:13,977:INFO:    pandas_profiling: Not installed
2023-08-06 18:51:13,979:INFO:  explainerdashboard: Not installed
2023-08-06 18:51:13,979:INFO:             autoviz: Not installed
2023-08-06 18:51:13,979:INFO:           fairlearn: Not installed
2023-08-06 18:51:13,980:INFO:          deepchecks: Not installed
2023-08-06 18:51:13,980:INFO:             xgboost: Not installed
2023-08-06 18:51:13,980:INFO:            catboost: Not installed
2023-08-06 18:51:13,980:INFO:              kmodes: Not installed
2023-08-06 18:51:13,980:INFO:             mlxtend: Not installed
2023-08-06 18:51:13,980:INFO:       statsforecast: Not installed
2023-08-06 18:51:13,980:INFO:        tune_sklearn: Not installed
2023-08-06 18:51:13,980:INFO:                 ray: Not installed
2023-08-06 18:51:13,980:INFO:            hyperopt: Not installed
2023-08-06 18:51:13,980:INFO:              optuna: Not installed
2023-08-06 18:51:13,980:INFO:               skopt: Not installed
2023-08-06 18:51:13,980:INFO:              mlflow: Not installed
2023-08-06 18:51:13,983:INFO:              gradio: Not installed
2023-08-06 18:51:13,983:INFO:             fastapi: Not installed
2023-08-06 18:51:13,983:INFO:             uvicorn: Not installed
2023-08-06 18:51:13,984:INFO:              m2cgen: Not installed
2023-08-06 18:51:13,984:INFO:           evidently: Not installed
2023-08-06 18:51:13,985:INFO:               fugue: Not installed
2023-08-06 18:51:13,985:INFO:           streamlit: Not installed
2023-08-06 18:51:13,985:INFO:             prophet: Not installed
2023-08-06 18:51:13,985:INFO:None
2023-08-06 18:51:13,985:INFO:Set up data.
2023-08-06 18:51:13,995:INFO:Set up train/test split.
2023-08-06 18:51:14,002:INFO:Set up index.
2023-08-06 18:51:14,002:INFO:Set up folding strategy.
2023-08-06 18:51:14,008:INFO:Assigning column types.
2023-08-06 18:51:14,014:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-06 18:51:14,014:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,019:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,214:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,224:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,230:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,330:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,406:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-06 18:51:14,418:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:14,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,630:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:14,799:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,055:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-06 18:51:15,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,173:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,265:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,447:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,447:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-06 18:51:15,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:15,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:15,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,021:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:16,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-06 18:51:16,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,141:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-06 18:51:16,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:16,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,447:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-06 18:51:16,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,530:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-06 18:51:16,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:16,929:INFO:Preparing preprocessing pipeline...
2023-08-06 18:51:16,929:INFO:Set up simple imputation.
2023-08-06 18:51:16,936:INFO:Set up encoding of ordinal features.
2023-08-06 18:51:16,936:INFO:Set up encoding of categorical features.
2023-08-06 18:51:16,936:INFO:Set up column transformation.
2023-08-06 18:51:16,936:INFO:Set up feature normalization.
2023-08-06 18:51:17,208:INFO:Finished creating preprocessing pipeline.
2023-08-06 18:51:17,271:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-08-06 18:51:17,271:INFO:Creating final display dataframe.
2023-08-06 18:51:17,391:INFO:Setup _display_container:                     Description             Value
0                    Session id               145
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape        (1070, 10)
6    Transformed test set shape         (268, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Transformation              True
17        Transformation method       yeo-johnson
18                    Normalize              True
19             Normalize method            zscore
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              5717
2023-08-06 18:51:17,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:17,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:17,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:17,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-06 18:51:17,821:INFO:setup() successfully completed in 4.25s...............
2023-08-06 18:51:17,875:INFO:Initializing get_config()
2023-08-06 18:51:17,876:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, variable=X_transformed)
2023-08-06 18:51:18,020:INFO:Variable: X returned as            age       sex       bmi  children    smoker  region_northeast   
1155 -0.162169 -1.038109 -1.456902  1.355620 -0.508747          1.742910  \
575   1.286189 -1.038109 -0.536170 -1.074594 -0.508747         -0.573753   
112  -0.090278  0.963290  0.074695 -1.074594 -0.508747         -0.573753   
583  -0.457355 -1.038109 -1.169611  0.293058 -0.508747         -0.573753   
436  -1.261757  0.963290  0.225194 -1.074594 -0.508747          1.742910   
...        ...       ...       ...       ...       ...               ...   
855  -1.437415 -1.038109 -0.122970 -1.074594 -0.508747         -0.573753   
420   1.643458  0.963290  0.564706 -1.074594  1.965613         -0.573753   
1010  0.658729 -1.038109 -1.329612 -1.074594 -0.508747         -0.573753   
92    1.346648  0.963290 -0.084771  1.355620  1.965613          1.742910   
972  -1.261757 -1.038109 -1.831613 -1.074594 -0.508747         -0.573753   

      region_northwest  region_southwest  region_southeast  
1155         -0.572314         -0.569436         -0.593901  
575           1.747292         -0.569436         -0.593901  
112          -0.572314          1.756123         -0.593901  
583          -0.572314         -0.569436          1.683783  
436          -0.572314         -0.569436         -0.593901  
...                ...               ...               ...  
855          -0.572314          1.756123         -0.593901  
420          -0.572314         -0.569436          1.683783  
1010         -0.572314          1.756123         -0.593901  
92           -0.572314         -0.569436         -0.593901  
972           1.747292         -0.569436         -0.593901  

[1338 rows x 9 columns]
2023-08-06 18:51:18,020:INFO:get_config() successfully completed......................................
2023-08-06 18:51:18,087:INFO:Initializing compare_models()
2023-08-06 18:51:18,087:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-08-06 18:51:18,088:INFO:Checking exceptions
2023-08-06 18:51:18,093:INFO:Preparing display monitor
2023-08-06 18:51:18,154:INFO:Initializing Linear Regression
2023-08-06 18:51:18,154:INFO:Total runtime is 0.0 minutes
2023-08-06 18:51:18,164:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:18,165:INFO:Initializing create_model()
2023-08-06 18:51:18,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:18,166:INFO:Checking exceptions
2023-08-06 18:51:18,166:INFO:Importing libraries
2023-08-06 18:51:18,166:INFO:Copying training dataset
2023-08-06 18:51:18,184:INFO:Defining folds
2023-08-06 18:51:18,184:INFO:Declaring metric variables
2023-08-06 18:51:18,201:INFO:Importing untrained model
2023-08-06 18:51:18,213:INFO:Linear Regression Imported successfully
2023-08-06 18:51:18,237:INFO:Starting cross validation
2023-08-06 18:51:18,242:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:28,372:INFO:Calculating mean and std
2023-08-06 18:51:28,374:INFO:Creating metrics dataframe
2023-08-06 18:51:28,560:INFO:Uploading results into container
2023-08-06 18:51:28,562:INFO:Uploading model into container now
2023-08-06 18:51:28,563:INFO:_master_model_container: 1
2023-08-06 18:51:28,564:INFO:_display_container: 2
2023-08-06 18:51:28,564:INFO:LinearRegression(n_jobs=-1)
2023-08-06 18:51:28,564:INFO:create_model() successfully completed......................................
2023-08-06 18:51:28,715:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:28,715:INFO:Creating metrics dataframe
2023-08-06 18:51:28,732:INFO:Initializing Lasso Regression
2023-08-06 18:51:28,733:INFO:Total runtime is 0.1763176401456197 minutes
2023-08-06 18:51:28,737:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:28,738:INFO:Initializing create_model()
2023-08-06 18:51:28,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:28,738:INFO:Checking exceptions
2023-08-06 18:51:28,738:INFO:Importing libraries
2023-08-06 18:51:28,738:INFO:Copying training dataset
2023-08-06 18:51:28,750:INFO:Defining folds
2023-08-06 18:51:28,750:INFO:Declaring metric variables
2023-08-06 18:51:28,757:INFO:Importing untrained model
2023-08-06 18:51:28,763:INFO:Lasso Regression Imported successfully
2023-08-06 18:51:28,773:INFO:Starting cross validation
2023-08-06 18:51:28,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:32,072:INFO:Calculating mean and std
2023-08-06 18:51:32,074:INFO:Creating metrics dataframe
2023-08-06 18:51:32,259:INFO:Uploading results into container
2023-08-06 18:51:32,260:INFO:Uploading model into container now
2023-08-06 18:51:32,261:INFO:_master_model_container: 2
2023-08-06 18:51:32,262:INFO:_display_container: 2
2023-08-06 18:51:32,262:INFO:Lasso(random_state=145)
2023-08-06 18:51:32,262:INFO:create_model() successfully completed......................................
2023-08-06 18:51:32,374:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:32,374:INFO:Creating metrics dataframe
2023-08-06 18:51:32,389:INFO:Initializing Ridge Regression
2023-08-06 18:51:32,389:INFO:Total runtime is 0.23725290695826212 minutes
2023-08-06 18:51:32,396:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:32,396:INFO:Initializing create_model()
2023-08-06 18:51:32,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:32,397:INFO:Checking exceptions
2023-08-06 18:51:32,397:INFO:Importing libraries
2023-08-06 18:51:32,397:INFO:Copying training dataset
2023-08-06 18:51:32,404:INFO:Defining folds
2023-08-06 18:51:32,404:INFO:Declaring metric variables
2023-08-06 18:51:32,409:INFO:Importing untrained model
2023-08-06 18:51:32,417:INFO:Ridge Regression Imported successfully
2023-08-06 18:51:32,430:INFO:Starting cross validation
2023-08-06 18:51:32,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:36,496:INFO:Calculating mean and std
2023-08-06 18:51:36,499:INFO:Creating metrics dataframe
2023-08-06 18:51:36,749:INFO:Uploading results into container
2023-08-06 18:51:36,752:INFO:Uploading model into container now
2023-08-06 18:51:36,753:INFO:_master_model_container: 3
2023-08-06 18:51:36,754:INFO:_display_container: 2
2023-08-06 18:51:36,755:INFO:Ridge(random_state=145)
2023-08-06 18:51:36,755:INFO:create_model() successfully completed......................................
2023-08-06 18:51:36,891:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:36,892:INFO:Creating metrics dataframe
2023-08-06 18:51:36,911:INFO:Initializing Elastic Net
2023-08-06 18:51:36,911:INFO:Total runtime is 0.3126116156578064 minutes
2023-08-06 18:51:36,919:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:36,919:INFO:Initializing create_model()
2023-08-06 18:51:36,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:36,920:INFO:Checking exceptions
2023-08-06 18:51:36,920:INFO:Importing libraries
2023-08-06 18:51:36,920:INFO:Copying training dataset
2023-08-06 18:51:36,934:INFO:Defining folds
2023-08-06 18:51:36,934:INFO:Declaring metric variables
2023-08-06 18:51:36,940:INFO:Importing untrained model
2023-08-06 18:51:36,950:INFO:Elastic Net Imported successfully
2023-08-06 18:51:36,962:INFO:Starting cross validation
2023-08-06 18:51:36,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:40,807:INFO:Calculating mean and std
2023-08-06 18:51:40,809:INFO:Creating metrics dataframe
2023-08-06 18:51:41,245:INFO:Uploading results into container
2023-08-06 18:51:41,247:INFO:Uploading model into container now
2023-08-06 18:51:41,250:INFO:_master_model_container: 4
2023-08-06 18:51:41,251:INFO:_display_container: 2
2023-08-06 18:51:41,251:INFO:ElasticNet(random_state=145)
2023-08-06 18:51:41,252:INFO:create_model() successfully completed......................................
2023-08-06 18:51:41,573:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:41,573:INFO:Creating metrics dataframe
2023-08-06 18:51:41,615:INFO:Initializing Least Angle Regression
2023-08-06 18:51:41,615:INFO:Total runtime is 0.39102252721786496 minutes
2023-08-06 18:51:41,626:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:41,628:INFO:Initializing create_model()
2023-08-06 18:51:41,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:41,632:INFO:Checking exceptions
2023-08-06 18:51:41,632:INFO:Importing libraries
2023-08-06 18:51:41,632:INFO:Copying training dataset
2023-08-06 18:51:41,652:INFO:Defining folds
2023-08-06 18:51:41,652:INFO:Declaring metric variables
2023-08-06 18:51:41,676:INFO:Importing untrained model
2023-08-06 18:51:41,688:INFO:Least Angle Regression Imported successfully
2023-08-06 18:51:41,711:INFO:Starting cross validation
2023-08-06 18:51:41,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:42,303:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:42,321:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:42,540:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:43,806:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:43,837:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:43,863:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:44,117:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:45,300:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:45,474:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:46,720:INFO:Calculating mean and std
2023-08-06 18:51:46,720:INFO:Creating metrics dataframe
2023-08-06 18:51:47,081:INFO:Uploading results into container
2023-08-06 18:51:47,081:INFO:Uploading model into container now
2023-08-06 18:51:47,081:INFO:_master_model_container: 5
2023-08-06 18:51:47,081:INFO:_display_container: 2
2023-08-06 18:51:47,081:INFO:Lars(random_state=145)
2023-08-06 18:51:47,081:INFO:create_model() successfully completed......................................
2023-08-06 18:51:47,263:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:47,264:INFO:Creating metrics dataframe
2023-08-06 18:51:47,283:INFO:Initializing Lasso Least Angle Regression
2023-08-06 18:51:47,283:INFO:Total runtime is 0.4854747692743937 minutes
2023-08-06 18:51:47,298:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:47,298:INFO:Initializing create_model()
2023-08-06 18:51:47,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:47,298:INFO:Checking exceptions
2023-08-06 18:51:47,298:INFO:Importing libraries
2023-08-06 18:51:47,298:INFO:Copying training dataset
2023-08-06 18:51:47,310:INFO:Defining folds
2023-08-06 18:51:47,318:INFO:Declaring metric variables
2023-08-06 18:51:47,327:INFO:Importing untrained model
2023-08-06 18:51:47,331:INFO:Lasso Least Angle Regression Imported successfully
2023-08-06 18:51:47,357:INFO:Starting cross validation
2023-08-06 18:51:47,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:47,985:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:48,013:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:48,070:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:48,290:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:49,523:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:49,540:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:49,583:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:49,883:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:50,930:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:51,195:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-06 18:51:52,606:INFO:Calculating mean and std
2023-08-06 18:51:52,606:INFO:Creating metrics dataframe
2023-08-06 18:51:52,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:51:52,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:51:52,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:51:52,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:51:52,955:INFO:Uploading results into container
2023-08-06 18:51:52,955:INFO:Uploading model into container now
2023-08-06 18:51:52,955:INFO:_master_model_container: 6
2023-08-06 18:51:52,955:INFO:_display_container: 2
2023-08-06 18:51:52,963:INFO:LassoLars(random_state=145)
2023-08-06 18:51:52,963:INFO:create_model() successfully completed......................................
2023-08-06 18:51:53,132:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:53,132:INFO:Creating metrics dataframe
2023-08-06 18:51:53,157:INFO:Initializing Orthogonal Matching Pursuit
2023-08-06 18:51:53,157:INFO:Total runtime is 0.5833844025929769 minutes
2023-08-06 18:51:53,167:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:53,168:INFO:Initializing create_model()
2023-08-06 18:51:53,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:53,168:INFO:Checking exceptions
2023-08-06 18:51:53,168:INFO:Importing libraries
2023-08-06 18:51:53,168:INFO:Copying training dataset
2023-08-06 18:51:53,181:INFO:Defining folds
2023-08-06 18:51:53,181:INFO:Declaring metric variables
2023-08-06 18:51:53,189:INFO:Importing untrained model
2023-08-06 18:51:53,199:INFO:Orthogonal Matching Pursuit Imported successfully
2023-08-06 18:51:53,221:INFO:Starting cross validation
2023-08-06 18:51:53,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:51:53,898:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:53,947:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:53,955:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:53,974:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:55,525:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:55,568:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:55,569:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:55,729:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:56,997:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:57,191:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-06 18:51:58,147:INFO:Initializing load_model()
2023-08-06 18:51:58,147:INFO:load_model(model_name=regression_model, platform=None, authentication=None, verbose=True)
2023-08-06 18:51:58,149:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,168:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,169:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,169:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DummyRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,169:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,195:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:51:58,300:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '58.1.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.8.1', 'joblib': '1.3.1', 'sklearn': '1.1.1', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.27.1', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.5', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.12.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-06 18:51:58,960:INFO:Calculating mean and std
2023-08-06 18:51:58,964:INFO:Creating metrics dataframe
2023-08-06 18:51:59,420:INFO:Uploading results into container
2023-08-06 18:51:59,422:INFO:Uploading model into container now
2023-08-06 18:51:59,423:INFO:_master_model_container: 7
2023-08-06 18:51:59,423:INFO:_display_container: 2
2023-08-06 18:51:59,423:INFO:OrthogonalMatchingPursuit()
2023-08-06 18:51:59,423:INFO:create_model() successfully completed......................................
2023-08-06 18:51:59,611:INFO:SubProcess create_model() end ==================================
2023-08-06 18:51:59,611:INFO:Creating metrics dataframe
2023-08-06 18:51:59,649:INFO:Initializing Bayesian Ridge
2023-08-06 18:51:59,649:INFO:Total runtime is 0.691588270664215 minutes
2023-08-06 18:51:59,664:INFO:SubProcess create_model() called ==================================
2023-08-06 18:51:59,664:INFO:Initializing create_model()
2023-08-06 18:51:59,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:51:59,665:INFO:Checking exceptions
2023-08-06 18:51:59,665:INFO:Importing libraries
2023-08-06 18:51:59,666:INFO:Copying training dataset
2023-08-06 18:51:59,684:INFO:Defining folds
2023-08-06 18:51:59,684:INFO:Declaring metric variables
2023-08-06 18:51:59,697:INFO:Importing untrained model
2023-08-06 18:51:59,704:INFO:Bayesian Ridge Imported successfully
2023-08-06 18:51:59,737:INFO:Starting cross validation
2023-08-06 18:51:59,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:02,980:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:04,573:INFO:Calculating mean and std
2023-08-06 18:52:04,573:INFO:Creating metrics dataframe
2023-08-06 18:52:04,924:INFO:Uploading results into container
2023-08-06 18:52:04,924:INFO:Uploading model into container now
2023-08-06 18:52:04,924:INFO:_master_model_container: 8
2023-08-06 18:52:04,924:INFO:_display_container: 2
2023-08-06 18:52:04,929:INFO:BayesianRidge()
2023-08-06 18:52:04,929:INFO:create_model() successfully completed......................................
2023-08-06 18:52:05,074:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:05,074:INFO:Creating metrics dataframe
2023-08-06 18:52:05,131:INFO:Initializing Passive Aggressive Regressor
2023-08-06 18:52:05,131:INFO:Total runtime is 0.782946753501892 minutes
2023-08-06 18:52:05,140:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:05,143:INFO:Initializing create_model()
2023-08-06 18:52:05,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:05,143:INFO:Checking exceptions
2023-08-06 18:52:05,144:INFO:Importing libraries
2023-08-06 18:52:05,144:INFO:Copying training dataset
2023-08-06 18:52:05,157:INFO:Defining folds
2023-08-06 18:52:05,157:INFO:Declaring metric variables
2023-08-06 18:52:05,170:INFO:Importing untrained model
2023-08-06 18:52:05,180:INFO:Passive Aggressive Regressor Imported successfully
2023-08-06 18:52:05,197:INFO:Starting cross validation
2023-08-06 18:52:05,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:06,593:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:09,666:INFO:Calculating mean and std
2023-08-06 18:52:09,669:INFO:Creating metrics dataframe
2023-08-06 18:52:10,022:INFO:Uploading results into container
2023-08-06 18:52:10,030:INFO:Uploading model into container now
2023-08-06 18:52:10,032:INFO:_master_model_container: 9
2023-08-06 18:52:10,032:INFO:_display_container: 2
2023-08-06 18:52:10,033:INFO:PassiveAggressiveRegressor(random_state=145)
2023-08-06 18:52:10,033:INFO:create_model() successfully completed......................................
2023-08-06 18:52:10,215:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:10,216:INFO:Creating metrics dataframe
2023-08-06 18:52:10,244:INFO:Initializing Huber Regressor
2023-08-06 18:52:10,245:INFO:Total runtime is 0.8681773463884989 minutes
2023-08-06 18:52:10,253:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:10,253:INFO:Initializing create_model()
2023-08-06 18:52:10,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:10,253:INFO:Checking exceptions
2023-08-06 18:52:10,253:INFO:Importing libraries
2023-08-06 18:52:10,253:INFO:Copying training dataset
2023-08-06 18:52:10,266:INFO:Defining folds
2023-08-06 18:52:10,266:INFO:Declaring metric variables
2023-08-06 18:52:10,278:INFO:Importing untrained model
2023-08-06 18:52:10,287:INFO:Huber Regressor Imported successfully
2023-08-06 18:52:10,295:INFO:Starting cross validation
2023-08-06 18:52:10,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:14,612:INFO:Calculating mean and std
2023-08-06 18:52:14,614:INFO:Creating metrics dataframe
2023-08-06 18:52:14,953:INFO:Uploading results into container
2023-08-06 18:52:14,955:INFO:Uploading model into container now
2023-08-06 18:52:14,957:INFO:_master_model_container: 10
2023-08-06 18:52:14,957:INFO:_display_container: 2
2023-08-06 18:52:14,958:INFO:HuberRegressor()
2023-08-06 18:52:14,958:INFO:create_model() successfully completed......................................
2023-08-06 18:52:15,098:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:15,098:INFO:Creating metrics dataframe
2023-08-06 18:52:15,116:INFO:Initializing K Neighbors Regressor
2023-08-06 18:52:15,116:INFO:Total runtime is 0.9493637084960936 minutes
2023-08-06 18:52:15,129:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:15,129:INFO:Initializing create_model()
2023-08-06 18:52:15,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:15,130:INFO:Checking exceptions
2023-08-06 18:52:15,130:INFO:Importing libraries
2023-08-06 18:52:15,130:INFO:Copying training dataset
2023-08-06 18:52:15,138:INFO:Defining folds
2023-08-06 18:52:15,138:INFO:Declaring metric variables
2023-08-06 18:52:15,147:INFO:Importing untrained model
2023-08-06 18:52:15,154:INFO:K Neighbors Regressor Imported successfully
2023-08-06 18:52:15,168:INFO:Starting cross validation
2023-08-06 18:52:15,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:16,782:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:20,646:INFO:Calculating mean and std
2023-08-06 18:52:20,648:INFO:Creating metrics dataframe
2023-08-06 18:52:21,033:INFO:Uploading results into container
2023-08-06 18:52:21,034:INFO:Uploading model into container now
2023-08-06 18:52:21,036:INFO:_master_model_container: 11
2023-08-06 18:52:21,036:INFO:_display_container: 2
2023-08-06 18:52:21,036:INFO:KNeighborsRegressor(n_jobs=-1)
2023-08-06 18:52:21,037:INFO:create_model() successfully completed......................................
2023-08-06 18:52:21,213:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:21,213:INFO:Creating metrics dataframe
2023-08-06 18:52:21,231:INFO:Initializing Decision Tree Regressor
2023-08-06 18:52:21,231:INFO:Total runtime is 1.0512841264406838 minutes
2023-08-06 18:52:21,244:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:21,245:INFO:Initializing create_model()
2023-08-06 18:52:21,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:21,245:INFO:Checking exceptions
2023-08-06 18:52:21,245:INFO:Importing libraries
2023-08-06 18:52:21,246:INFO:Copying training dataset
2023-08-06 18:52:21,253:INFO:Defining folds
2023-08-06 18:52:21,253:INFO:Declaring metric variables
2023-08-06 18:52:21,263:INFO:Importing untrained model
2023-08-06 18:52:21,274:INFO:Decision Tree Regressor Imported successfully
2023-08-06 18:52:21,289:INFO:Starting cross validation
2023-08-06 18:52:21,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:24,859:INFO:Initializing predict_model()
2023-08-06 18:52:24,859:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000161129970D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\srikanth\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016112D84550>)
2023-08-06 18:52:24,859:INFO:Checking exceptions
2023-08-06 18:52:24,859:INFO:Preloading libraries
2023-08-06 18:52:24,859:INFO:Set up data.
2023-08-06 18:52:24,869:INFO:Set up index.
2023-08-06 18:52:26,473:INFO:Calculating mean and std
2023-08-06 18:52:26,476:INFO:Creating metrics dataframe
2023-08-06 18:52:26,847:INFO:Uploading results into container
2023-08-06 18:52:26,847:INFO:Uploading model into container now
2023-08-06 18:52:26,847:INFO:_master_model_container: 12
2023-08-06 18:52:26,847:INFO:_display_container: 2
2023-08-06 18:52:26,847:INFO:DecisionTreeRegressor(random_state=145)
2023-08-06 18:52:26,847:INFO:create_model() successfully completed......................................
2023-08-06 18:52:27,057:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:27,057:INFO:Creating metrics dataframe
2023-08-06 18:52:27,091:INFO:Initializing Random Forest Regressor
2023-08-06 18:52:27,091:INFO:Total runtime is 1.1489499568939208 minutes
2023-08-06 18:52:27,101:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:27,101:INFO:Initializing create_model()
2023-08-06 18:52:27,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:27,101:INFO:Checking exceptions
2023-08-06 18:52:27,101:INFO:Importing libraries
2023-08-06 18:52:27,101:INFO:Copying training dataset
2023-08-06 18:52:27,116:INFO:Defining folds
2023-08-06 18:52:27,116:INFO:Declaring metric variables
2023-08-06 18:52:27,131:INFO:Importing untrained model
2023-08-06 18:52:27,146:INFO:Random Forest Regressor Imported successfully
2023-08-06 18:52:27,165:INFO:Starting cross validation
2023-08-06 18:52:27,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:29,318:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:32,440:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:33,473:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:35,809:INFO:Calculating mean and std
2023-08-06 18:52:35,813:INFO:Creating metrics dataframe
2023-08-06 18:52:36,196:INFO:Uploading results into container
2023-08-06 18:52:36,197:INFO:Uploading model into container now
2023-08-06 18:52:36,197:INFO:_master_model_container: 13
2023-08-06 18:52:36,197:INFO:_display_container: 2
2023-08-06 18:52:36,197:INFO:RandomForestRegressor(n_jobs=-1, random_state=145)
2023-08-06 18:52:36,197:INFO:create_model() successfully completed......................................
2023-08-06 18:52:36,347:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:36,347:INFO:Creating metrics dataframe
2023-08-06 18:52:36,370:INFO:Initializing Extra Trees Regressor
2023-08-06 18:52:36,370:INFO:Total runtime is 1.3035952726999918 minutes
2023-08-06 18:52:36,381:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:36,381:INFO:Initializing create_model()
2023-08-06 18:52:36,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:36,381:INFO:Checking exceptions
2023-08-06 18:52:36,381:INFO:Importing libraries
2023-08-06 18:52:36,381:INFO:Copying training dataset
2023-08-06 18:52:36,407:INFO:Defining folds
2023-08-06 18:52:36,407:INFO:Declaring metric variables
2023-08-06 18:52:36,428:INFO:Importing untrained model
2023-08-06 18:52:36,442:INFO:Extra Trees Regressor Imported successfully
2023-08-06 18:52:36,471:INFO:Starting cross validation
2023-08-06 18:52:36,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:39,558:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:43,481:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:45,914:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:52:46,461:INFO:Calculating mean and std
2023-08-06 18:52:46,466:INFO:Creating metrics dataframe
2023-08-06 18:52:46,780:INFO:Uploading results into container
2023-08-06 18:52:46,781:INFO:Uploading model into container now
2023-08-06 18:52:46,782:INFO:_master_model_container: 14
2023-08-06 18:52:46,782:INFO:_display_container: 2
2023-08-06 18:52:46,783:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=145)
2023-08-06 18:52:46,783:INFO:create_model() successfully completed......................................
2023-08-06 18:52:46,906:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:46,906:INFO:Creating metrics dataframe
2023-08-06 18:52:46,923:INFO:Initializing AdaBoost Regressor
2023-08-06 18:52:46,924:INFO:Total runtime is 1.479497992992401 minutes
2023-08-06 18:52:46,932:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:46,932:INFO:Initializing create_model()
2023-08-06 18:52:46,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:46,933:INFO:Checking exceptions
2023-08-06 18:52:46,933:INFO:Importing libraries
2023-08-06 18:52:46,933:INFO:Copying training dataset
2023-08-06 18:52:46,941:INFO:Defining folds
2023-08-06 18:52:46,941:INFO:Declaring metric variables
2023-08-06 18:52:46,948:INFO:Importing untrained model
2023-08-06 18:52:46,952:INFO:AdaBoost Regressor Imported successfully
2023-08-06 18:52:46,964:INFO:Starting cross validation
2023-08-06 18:52:46,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:52,211:INFO:Calculating mean and std
2023-08-06 18:52:52,213:INFO:Creating metrics dataframe
2023-08-06 18:52:52,476:INFO:Uploading results into container
2023-08-06 18:52:52,477:INFO:Uploading model into container now
2023-08-06 18:52:52,478:INFO:_master_model_container: 15
2023-08-06 18:52:52,478:INFO:_display_container: 2
2023-08-06 18:52:52,479:INFO:AdaBoostRegressor(random_state=145)
2023-08-06 18:52:52,479:INFO:create_model() successfully completed......................................
2023-08-06 18:52:52,595:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:52,596:INFO:Creating metrics dataframe
2023-08-06 18:52:52,614:INFO:Initializing Gradient Boosting Regressor
2023-08-06 18:52:52,614:INFO:Total runtime is 1.574340510368347 minutes
2023-08-06 18:52:52,620:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:52,620:INFO:Initializing create_model()
2023-08-06 18:52:52,621:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:52,621:INFO:Checking exceptions
2023-08-06 18:52:52,621:INFO:Importing libraries
2023-08-06 18:52:52,621:INFO:Copying training dataset
2023-08-06 18:52:52,630:INFO:Defining folds
2023-08-06 18:52:52,630:INFO:Declaring metric variables
2023-08-06 18:52:52,635:INFO:Importing untrained model
2023-08-06 18:52:52,642:INFO:Gradient Boosting Regressor Imported successfully
2023-08-06 18:52:52,654:INFO:Starting cross validation
2023-08-06 18:52:52,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:52:57,240:INFO:Calculating mean and std
2023-08-06 18:52:57,242:INFO:Creating metrics dataframe
2023-08-06 18:52:57,626:INFO:Uploading results into container
2023-08-06 18:52:57,628:INFO:Uploading model into container now
2023-08-06 18:52:57,631:INFO:_master_model_container: 16
2023-08-06 18:52:57,632:INFO:_display_container: 2
2023-08-06 18:52:57,633:INFO:GradientBoostingRegressor(random_state=145)
2023-08-06 18:52:57,633:INFO:create_model() successfully completed......................................
2023-08-06 18:52:57,799:INFO:SubProcess create_model() end ==================================
2023-08-06 18:52:57,799:INFO:Creating metrics dataframe
2023-08-06 18:52:57,819:INFO:Initializing Light Gradient Boosting Machine
2023-08-06 18:52:57,819:INFO:Total runtime is 1.661074888706207 minutes
2023-08-06 18:52:57,825:INFO:SubProcess create_model() called ==================================
2023-08-06 18:52:57,825:INFO:Initializing create_model()
2023-08-06 18:52:57,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:52:57,826:INFO:Checking exceptions
2023-08-06 18:52:57,826:INFO:Importing libraries
2023-08-06 18:52:57,826:INFO:Copying training dataset
2023-08-06 18:52:57,833:INFO:Defining folds
2023-08-06 18:52:57,834:INFO:Declaring metric variables
2023-08-06 18:52:57,842:INFO:Importing untrained model
2023-08-06 18:52:57,848:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-06 18:52:57,859:INFO:Starting cross validation
2023-08-06 18:52:57,862:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:53:04,077:INFO:Calculating mean and std
2023-08-06 18:53:04,079:INFO:Creating metrics dataframe
2023-08-06 18:53:04,349:INFO:Uploading results into container
2023-08-06 18:53:04,350:INFO:Uploading model into container now
2023-08-06 18:53:04,350:INFO:_master_model_container: 17
2023-08-06 18:53:04,351:INFO:_display_container: 2
2023-08-06 18:53:04,351:INFO:LGBMRegressor(n_jobs=-1, random_state=145)
2023-08-06 18:53:04,351:INFO:create_model() successfully completed......................................
2023-08-06 18:53:04,459:INFO:SubProcess create_model() end ==================================
2023-08-06 18:53:04,460:INFO:Creating metrics dataframe
2023-08-06 18:53:04,476:INFO:Initializing Dummy Regressor
2023-08-06 18:53:04,477:INFO:Total runtime is 1.7720323443412778 minutes
2023-08-06 18:53:04,481:INFO:SubProcess create_model() called ==================================
2023-08-06 18:53:04,482:INFO:Initializing create_model()
2023-08-06 18:53:04,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002080D7C4970>, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:53:04,482:INFO:Checking exceptions
2023-08-06 18:53:04,483:INFO:Importing libraries
2023-08-06 18:53:04,483:INFO:Copying training dataset
2023-08-06 18:53:04,491:INFO:Defining folds
2023-08-06 18:53:04,491:INFO:Declaring metric variables
2023-08-06 18:53:04,498:INFO:Importing untrained model
2023-08-06 18:53:04,505:INFO:Dummy Regressor Imported successfully
2023-08-06 18:53:04,522:INFO:Starting cross validation
2023-08-06 18:53:04,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:53:09,398:INFO:Calculating mean and std
2023-08-06 18:53:09,399:INFO:Creating metrics dataframe
2023-08-06 18:53:09,842:INFO:Uploading results into container
2023-08-06 18:53:09,842:INFO:Uploading model into container now
2023-08-06 18:53:09,842:INFO:_master_model_container: 18
2023-08-06 18:53:09,842:INFO:_display_container: 2
2023-08-06 18:53:09,842:INFO:DummyRegressor()
2023-08-06 18:53:09,842:INFO:create_model() successfully completed......................................
2023-08-06 18:53:09,990:INFO:SubProcess create_model() end ==================================
2023-08-06 18:53:09,990:INFO:Creating metrics dataframe
2023-08-06 18:53:10,043:INFO:Initializing create_model()
2023-08-06 18:53:10,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=GradientBoostingRegressor(random_state=145), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:53:10,043:INFO:Checking exceptions
2023-08-06 18:53:10,043:INFO:Importing libraries
2023-08-06 18:53:10,043:INFO:Copying training dataset
2023-08-06 18:53:10,059:INFO:Defining folds
2023-08-06 18:53:10,059:INFO:Declaring metric variables
2023-08-06 18:53:10,059:INFO:Importing untrained model
2023-08-06 18:53:10,059:INFO:Declaring custom model
2023-08-06 18:53:10,059:INFO:Gradient Boosting Regressor Imported successfully
2023-08-06 18:53:10,059:INFO:Cross validation set to False
2023-08-06 18:53:10,059:INFO:Fitting Model
2023-08-06 18:53:10,620:INFO:GradientBoostingRegressor(random_state=145)
2023-08-06 18:53:10,620:INFO:create_model() successfully completed......................................
2023-08-06 18:53:10,843:INFO:_master_model_container: 18
2023-08-06 18:53:10,843:INFO:_display_container: 2
2023-08-06 18:53:10,843:INFO:GradientBoostingRegressor(random_state=145)
2023-08-06 18:53:10,843:INFO:compare_models() successfully completed......................................
2023-08-06 18:53:10,872:INFO:Initializing create_model()
2023-08-06 18:53:10,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>, estimator=gbr, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-06 18:53:10,872:INFO:Checking exceptions
2023-08-06 18:53:10,916:INFO:Importing libraries
2023-08-06 18:53:10,916:INFO:Copying training dataset
2023-08-06 18:53:10,927:INFO:Defining folds
2023-08-06 18:53:10,927:INFO:Declaring metric variables
2023-08-06 18:53:10,944:INFO:Importing untrained model
2023-08-06 18:53:10,959:INFO:Gradient Boosting Regressor Imported successfully
2023-08-06 18:53:10,977:INFO:Starting cross validation
2023-08-06 18:53:10,977:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-06 18:53:16,038:INFO:Calculating mean and std
2023-08-06 18:53:16,041:INFO:Creating metrics dataframe
2023-08-06 18:53:16,049:INFO:Finalizing model
2023-08-06 18:53:17,019:INFO:Uploading results into container
2023-08-06 18:53:17,019:INFO:Uploading model into container now
2023-08-06 18:53:17,047:INFO:_master_model_container: 19
2023-08-06 18:53:17,047:INFO:_display_container: 3
2023-08-06 18:53:17,048:INFO:GradientBoostingRegressor(random_state=145)
2023-08-06 18:53:17,048:INFO:create_model() successfully completed......................................
2023-08-06 18:53:17,225:INFO:Initializing tune_model()
2023-08-06 18:53:17,225:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=145), fold=10, round=4, n_iter=100, custom_grid={'learning_rate': [0.05, 0.08, 0.1], 'max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'subsample': [0.8, 0.9, 1, 1.1], 'n_estimators': [100, 200, 300, 400, 500]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002080DB726E0>)
2023-08-06 18:53:17,226:INFO:Checking exceptions
2023-08-06 18:53:17,285:INFO:Copying training dataset
2023-08-06 18:53:17,296:INFO:Checking base model
2023-08-06 18:53:17,296:INFO:Base model : Gradient Boosting Regressor
2023-08-06 18:53:17,307:INFO:Declaring metric variables
2023-08-06 18:53:17,321:INFO:Defining Hyperparameters
2023-08-06 18:53:17,472:INFO:custom_grid: {'actual_estimator__learning_rate': [0.05, 0.08, 0.1], 'actual_estimator__max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'actual_estimator__subsample': [0.8, 0.9, 1, 1.1], 'actual_estimator__n_estimators': [100, 200, 300, 400, 500]}
2023-08-06 18:53:17,472:INFO:Tuning with n_jobs=-1
2023-08-06 18:53:17,472:INFO:Initializing RandomizedSearchCV
2023-08-06 18:53:19,497:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:19,527:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:19,562:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:22,122:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:22,135:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:22,236:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:22,582:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:26,458:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.46s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:26,705:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:27,588:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.38s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:28,489:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:30,254:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:30,469:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:31,189:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:32,553:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.16s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:33,978:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.13s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:35,047:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:35,889:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:36,924:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:38,246:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:39,375:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:40,208:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.18s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:41,413:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.40s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:42,379:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.23s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:43,609:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.33s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:44,238:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.26s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:45,896:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.48s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:46,935:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.33s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:47,685:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:48,682:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:50,199:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:51,653:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:53,294:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.47s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:54,132:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.16s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:54,132:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:53:54,997:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:53:56,836:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:53:56,909:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.29s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:57,591:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:53:57,591:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.29s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:53:59,563:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:00,341:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:00,599:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:54:02,285:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.37s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:54:03,287:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:03,797:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:54:04,560:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:54:04,902:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:06,579:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.41s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:07,378:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:54:07,419:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-06 18:54:08,861:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-06 18:57:38,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:57:38,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:57:38,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:57:38,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 18:57:40,680:INFO:Initializing load_model()
2023-08-06 18:57:40,680:INFO:load_model(model_name=regression_model, platform=None, authentication=None, verbose=True)
2023-08-06 18:57:40,692:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,696:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,696:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,696:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DummyRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,696:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,715:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 18:57:40,745:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '58.1.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.8.1', 'joblib': '1.3.1', 'sklearn': '1.1.1', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.27.1', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.5', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.12.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-06 18:57:49,214:INFO:Initializing predict_model()
2023-08-06 18:57:49,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020A4AFDF3A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\srikanth\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A4B158430>)
2023-08-06 18:57:49,215:INFO:Checking exceptions
2023-08-06 18:57:49,215:INFO:Preloading libraries
2023-08-06 18:57:49,215:INFO:Set up data.
2023-08-06 18:57:49,222:INFO:Set up index.
2023-08-06 19:10:21,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 19:10:21,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 19:10:21,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 19:10:21,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-06 19:10:26,769:INFO:Initializing load_model()
2023-08-06 19:10:26,770:INFO:load_model(model_name=C:/Users/user/ml_end2end-main/regression_model.pkl, platform=None, authentication=None, verbose=True)
2023-08-06 19:10:45,730:INFO:Initializing load_model()
2023-08-06 19:10:45,730:INFO:load_model(model_name=C:/Users/user/ml_end2end-main/regression_model, platform=None, authentication=None, verbose=True)
2023-08-06 19:10:45,864:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:45,875:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator PowerTransformer from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:45,876:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:45,880:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DummyRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:45,881:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:45,915:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:329: UserWarning: Trying to unpickle estimator GradientBoostingRegressor from version 1.2.2 when using version 1.1.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-06 19:10:46,339:WARNING:C:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '58.1.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.8.1', 'joblib': '1.3.1', 'sklearn': '1.1.1', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.27.1', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.5', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.12.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-06 19:11:20,304:INFO:Initializing predict_model()
2023-08-06 19:11:20,304:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE61D003A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\srikanth\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE6DB4E050>)
2023-08-06 19:11:20,304:INFO:Checking exceptions
2023-08-06 19:11:20,304:INFO:Preloading libraries
2023-08-06 19:11:20,304:INFO:Set up data.
2023-08-06 19:11:20,320:INFO:Set up index.
2023-08-08 13:51:14,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 13:51:14,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 13:51:14,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 13:51:14,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 13:51:27,006:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2023-08-08 13:51:31,010:INFO:PyCaret RegressionExperiment
2023-08-08 13:51:31,010:INFO:Logging name: reg-default-name
2023-08-08 13:51:31,010:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-08 13:51:31,011:INFO:version 3.0.4
2023-08-08 13:51:31,011:INFO:Initializing setup()
2023-08-08 13:51:31,011:INFO:self.USI: 3f82
2023-08-08 13:51:31,011:INFO:self._variable_keys: {'pipeline', 'gpu_param', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'fold_generator', '_ml_usecase', 'exp_id', 'USI', 'y', 'y_train', 'idx', '_available_plots', 'html_param', 'y_test', 'X_test', 'logging_param', 'X_train', 'seed', 'data', 'exp_name_log', 'target_param', 'fold_shuffle_param', 'memory', 'log_plots_param', 'fold_groups_param', 'n_jobs_param'}
2023-08-08 13:51:31,011:INFO:Checking environment
2023-08-08 13:51:31,011:INFO:python_version: 3.10.5
2023-08-08 13:51:31,011:INFO:python_build: ('tags/v3.10.5:f377153', 'Jun  6 2022 16:14:13')
2023-08-08 13:51:31,011:INFO:machine: AMD64
2023-08-08 13:51:31,011:INFO:platform: Windows-10-10.0.19045-SP0
2023-08-08 13:51:31,014:INFO:Memory: svmem(total=17039134720, available=8473100288, percent=50.3, used=8566034432, free=8473100288)
2023-08-08 13:51:31,014:INFO:Physical Core: 2
2023-08-08 13:51:31,014:INFO:Logical Core: 4
2023-08-08 13:51:31,014:INFO:Checking libraries
2023-08-08 13:51:31,014:INFO:System:
2023-08-08 13:51:31,014:INFO:    python: 3.10.5 (tags/v3.10.5:f377153, Jun  6 2022, 16:14:13) [MSC v.1929 64 bit (AMD64)]
2023-08-08 13:51:31,014:INFO:executable: c:\Users\user\AppData\Local\Programs\Python\Python310\python.exe
2023-08-08 13:51:31,014:INFO:   machine: Windows-10-10.0.19045-SP0
2023-08-08 13:51:31,014:INFO:PyCaret required dependencies:
2023-08-08 13:51:31,309:INFO:                 pip: 23.2.1
2023-08-08 13:51:31,309:INFO:          setuptools: 58.1.0
2023-08-08 13:51:31,309:INFO:             pycaret: 3.0.4
2023-08-08 13:51:31,309:INFO:             IPython: 8.14.0
2023-08-08 13:51:31,309:INFO:          ipywidgets: 8.1.0
2023-08-08 13:51:31,309:INFO:                tqdm: 4.65.0
2023-08-08 13:51:31,309:INFO:               numpy: 1.22.4
2023-08-08 13:51:31,309:INFO:              pandas: 1.5.3
2023-08-08 13:51:31,309:INFO:              jinja2: 3.1.2
2023-08-08 13:51:31,309:INFO:               scipy: 1.8.1
2023-08-08 13:51:31,309:INFO:              joblib: 1.3.1
2023-08-08 13:51:31,309:INFO:             sklearn: 1.1.1
2023-08-08 13:51:31,309:INFO:                pyod: 1.1.0
2023-08-08 13:51:31,309:INFO:            imblearn: 0.11.0
2023-08-08 13:51:31,309:INFO:   category_encoders: 2.6.1
2023-08-08 13:51:31,309:INFO:            lightgbm: 4.0.0
2023-08-08 13:51:31,309:INFO:               numba: 0.57.1
2023-08-08 13:51:31,309:INFO:            requests: 2.27.1
2023-08-08 13:51:31,309:INFO:          matplotlib: 3.7.2
2023-08-08 13:51:31,309:INFO:          scikitplot: 0.3.7
2023-08-08 13:51:31,309:INFO:         yellowbrick: 1.5
2023-08-08 13:51:31,309:INFO:              plotly: 5.15.0
2023-08-08 13:51:31,309:INFO:    plotly-resampler: Not installed
2023-08-08 13:51:31,309:INFO:             kaleido: 0.2.1
2023-08-08 13:51:31,309:INFO:           schemdraw: 0.15
2023-08-08 13:51:31,309:INFO:         statsmodels: 0.14.0
2023-08-08 13:51:31,309:INFO:              sktime: 0.21.0
2023-08-08 13:51:31,309:INFO:               tbats: 1.1.3
2023-08-08 13:51:31,309:INFO:            pmdarima: 2.0.3
2023-08-08 13:51:31,309:INFO:              psutil: 5.9.5
2023-08-08 13:51:31,309:INFO:          markupsafe: 2.1.3
2023-08-08 13:51:31,309:INFO:             pickle5: Not installed
2023-08-08 13:51:31,309:INFO:         cloudpickle: 2.2.1
2023-08-08 13:51:31,309:INFO:         deprecation: 2.1.0
2023-08-08 13:51:31,309:INFO:              xxhash: 3.3.0
2023-08-08 13:51:31,309:INFO:           wurlitzer: Not installed
2023-08-08 13:51:31,309:INFO:PyCaret optional dependencies:
2023-08-08 13:51:31,391:INFO:                shap: Not installed
2023-08-08 13:51:31,391:INFO:           interpret: Not installed
2023-08-08 13:51:31,391:INFO:                umap: Not installed
2023-08-08 13:51:31,392:INFO:    pandas_profiling: Not installed
2023-08-08 13:51:31,392:INFO:  explainerdashboard: Not installed
2023-08-08 13:51:31,392:INFO:             autoviz: Not installed
2023-08-08 13:51:31,393:INFO:           fairlearn: Not installed
2023-08-08 13:51:31,393:INFO:          deepchecks: Not installed
2023-08-08 13:51:31,393:INFO:             xgboost: Not installed
2023-08-08 13:51:31,393:INFO:            catboost: Not installed
2023-08-08 13:51:31,393:INFO:              kmodes: Not installed
2023-08-08 13:51:31,393:INFO:             mlxtend: Not installed
2023-08-08 13:51:31,393:INFO:       statsforecast: Not installed
2023-08-08 13:51:31,393:INFO:        tune_sklearn: Not installed
2023-08-08 13:51:31,393:INFO:                 ray: Not installed
2023-08-08 13:51:31,393:INFO:            hyperopt: Not installed
2023-08-08 13:51:31,393:INFO:              optuna: Not installed
2023-08-08 13:51:31,393:INFO:               skopt: Not installed
2023-08-08 13:51:31,393:INFO:              mlflow: Not installed
2023-08-08 13:51:31,393:INFO:              gradio: Not installed
2023-08-08 13:51:31,393:INFO:             fastapi: Not installed
2023-08-08 13:51:31,393:INFO:             uvicorn: Not installed
2023-08-08 13:51:31,393:INFO:              m2cgen: Not installed
2023-08-08 13:51:31,393:INFO:           evidently: Not installed
2023-08-08 13:51:31,393:INFO:               fugue: Not installed
2023-08-08 13:51:31,393:INFO:           streamlit: 1.25.0
2023-08-08 13:51:31,393:INFO:             prophet: Not installed
2023-08-08 13:51:31,393:INFO:None
2023-08-08 13:51:31,393:INFO:Set up data.
2023-08-08 13:51:31,428:INFO:Set up train/test split.
2023-08-08 13:51:31,446:INFO:Set up index.
2023-08-08 13:51:31,446:INFO:Set up folding strategy.
2023-08-08 13:51:31,446:INFO:Assigning column types.
2023-08-08 13:51:31,458:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-08 13:51:31,459:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,469:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,832:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:31,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:31,832:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,841:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,847:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:31,981:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,070:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-08 13:51:32,083:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,226:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,345:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,465:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,584:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-08 13:51:32,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,712:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:32,846:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-08 13:51:32,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,064:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-08 13:51:33,194:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,480:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,480:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-08 13:51:33,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-08 13:51:33,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:33,926:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-08 13:51:34,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:34,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:34,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:34,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:34,341:INFO:Preparing preprocessing pipeline...
2023-08-08 13:51:34,341:INFO:Set up simple imputation.
2023-08-08 13:51:34,350:INFO:Set up encoding of ordinal features.
2023-08-08 13:51:34,356:INFO:Set up encoding of categorical features.
2023-08-08 13:51:34,356:INFO:Set up column transformation.
2023-08-08 13:51:34,356:INFO:Set up feature normalization.
2023-08-08 13:51:34,557:INFO:Finished creating preprocessing pipeline.
2023-08-08 13:51:34,661:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-08-08 13:51:34,661:INFO:Creating final display dataframe.
2023-08-08 13:51:35,123:INFO:Setup _display_container:                     Description             Value
0                    Session id               145
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape        (1070, 10)
6    Transformed test set shape         (268, 10)
7              Ordinal features                 2
8              Numeric features                 3
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Transformation              True
17        Transformation method       yeo-johnson
18                    Normalize              True
19             Normalize method            zscore
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              3f82
2023-08-08 13:51:35,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:35,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:35,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:35,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-08 13:51:35,607:INFO:setup() successfully completed in 5.53s...............
2023-08-08 13:51:35,652:INFO:Initializing get_config()
2023-08-08 13:51:35,652:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, variable=X_transformed)
2023-08-08 13:51:35,975:INFO:Variable: X returned as            age       sex       bmi  children    smoker  region_northeast  \
1155 -0.162169 -1.038109 -1.456902  1.355620 -0.508747          1.742910   
575   1.286189 -1.038109 -0.536170 -1.074594 -0.508747         -0.573753   
112  -0.090278  0.963290  0.074695 -1.074594 -0.508747         -0.573753   
583  -0.457355 -1.038109 -1.169611  0.293058 -0.508747         -0.573753   
436  -1.261757  0.963290  0.225194 -1.074594 -0.508747          1.742910   
...        ...       ...       ...       ...       ...               ...   
855  -1.437415 -1.038109 -0.122970 -1.074594 -0.508747         -0.573753   
420   1.643458  0.963290  0.564706 -1.074594  1.965613         -0.573753   
1010  0.658729 -1.038109 -1.329612 -1.074594 -0.508747         -0.573753   
92    1.346648  0.963290 -0.084771  1.355620  1.965613          1.742910   
972  -1.261757 -1.038109 -1.831613 -1.074594 -0.508747         -0.573753   

      region_northwest  region_southwest  region_southeast  
1155         -0.572314         -0.569436         -0.593901  
575           1.747292         -0.569436         -0.593901  
112          -0.572314          1.756123         -0.593901  
583          -0.572314         -0.569436          1.683783  
436          -0.572314         -0.569436         -0.593901  
...                ...               ...               ...  
855          -0.572314          1.756123         -0.593901  
420          -0.572314         -0.569436          1.683783  
1010         -0.572314          1.756123         -0.593901  
92           -0.572314         -0.569436         -0.593901  
972           1.747292         -0.569436         -0.593901  

[1338 rows x 9 columns]
2023-08-08 13:51:35,975:INFO:get_config() successfully completed......................................
2023-08-08 13:51:36,021:INFO:Initializing compare_models()
2023-08-08 13:51:36,021:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-08-08 13:51:36,023:INFO:Checking exceptions
2023-08-08 13:51:36,026:INFO:Preparing display monitor
2023-08-08 13:51:36,097:INFO:Initializing Linear Regression
2023-08-08 13:51:36,097:INFO:Total runtime is 0.0 minutes
2023-08-08 13:51:36,113:INFO:SubProcess create_model() called ==================================
2023-08-08 13:51:36,113:INFO:Initializing create_model()
2023-08-08 13:51:36,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:51:36,113:INFO:Checking exceptions
2023-08-08 13:51:36,113:INFO:Importing libraries
2023-08-08 13:51:36,113:INFO:Copying training dataset
2023-08-08 13:51:36,121:INFO:Defining folds
2023-08-08 13:51:36,121:INFO:Declaring metric variables
2023-08-08 13:51:36,153:INFO:Importing untrained model
2023-08-08 13:51:36,162:INFO:Linear Regression Imported successfully
2023-08-08 13:51:36,178:INFO:Starting cross validation
2023-08-08 13:51:36,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:51:49,848:INFO:Calculating mean and std
2023-08-08 13:51:49,852:INFO:Creating metrics dataframe
2023-08-08 13:51:50,223:INFO:Uploading results into container
2023-08-08 13:51:50,224:INFO:Uploading model into container now
2023-08-08 13:51:50,225:INFO:_master_model_container: 1
2023-08-08 13:51:50,225:INFO:_display_container: 2
2023-08-08 13:51:50,225:INFO:LinearRegression(n_jobs=-1)
2023-08-08 13:51:50,225:INFO:create_model() successfully completed......................................
2023-08-08 13:51:50,323:INFO:SubProcess create_model() end ==================================
2023-08-08 13:51:50,323:INFO:Creating metrics dataframe
2023-08-08 13:51:50,338:INFO:Initializing Lasso Regression
2023-08-08 13:51:50,338:INFO:Total runtime is 0.23735562960306802 minutes
2023-08-08 13:51:50,352:INFO:SubProcess create_model() called ==================================
2023-08-08 13:51:50,353:INFO:Initializing create_model()
2023-08-08 13:51:50,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:51:50,354:INFO:Checking exceptions
2023-08-08 13:51:50,354:INFO:Importing libraries
2023-08-08 13:51:50,354:INFO:Copying training dataset
2023-08-08 13:51:50,365:INFO:Defining folds
2023-08-08 13:51:50,365:INFO:Declaring metric variables
2023-08-08 13:51:50,375:INFO:Importing untrained model
2023-08-08 13:51:50,389:INFO:Lasso Regression Imported successfully
2023-08-08 13:51:50,411:INFO:Starting cross validation
2023-08-08 13:51:50,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:51:55,565:INFO:Calculating mean and std
2023-08-08 13:51:55,568:INFO:Creating metrics dataframe
2023-08-08 13:51:55,940:INFO:Uploading results into container
2023-08-08 13:51:55,941:INFO:Uploading model into container now
2023-08-08 13:51:55,942:INFO:_master_model_container: 2
2023-08-08 13:51:55,942:INFO:_display_container: 2
2023-08-08 13:51:55,943:INFO:Lasso(random_state=145)
2023-08-08 13:51:55,943:INFO:create_model() successfully completed......................................
2023-08-08 13:51:56,052:INFO:SubProcess create_model() end ==================================
2023-08-08 13:51:56,053:INFO:Creating metrics dataframe
2023-08-08 13:51:56,068:INFO:Initializing Ridge Regression
2023-08-08 13:51:56,068:INFO:Total runtime is 0.33285839160283404 minutes
2023-08-08 13:51:56,080:INFO:SubProcess create_model() called ==================================
2023-08-08 13:51:56,081:INFO:Initializing create_model()
2023-08-08 13:51:56,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:51:56,081:INFO:Checking exceptions
2023-08-08 13:51:56,081:INFO:Importing libraries
2023-08-08 13:51:56,082:INFO:Copying training dataset
2023-08-08 13:51:56,093:INFO:Defining folds
2023-08-08 13:51:56,094:INFO:Declaring metric variables
2023-08-08 13:51:56,105:INFO:Importing untrained model
2023-08-08 13:51:56,117:INFO:Ridge Regression Imported successfully
2023-08-08 13:51:56,147:INFO:Starting cross validation
2023-08-08 13:51:56,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:01,113:INFO:Calculating mean and std
2023-08-08 13:52:01,116:INFO:Creating metrics dataframe
2023-08-08 13:52:01,540:INFO:Uploading results into container
2023-08-08 13:52:01,541:INFO:Uploading model into container now
2023-08-08 13:52:01,542:INFO:_master_model_container: 3
2023-08-08 13:52:01,542:INFO:_display_container: 2
2023-08-08 13:52:01,542:INFO:Ridge(random_state=145)
2023-08-08 13:52:01,542:INFO:create_model() successfully completed......................................
2023-08-08 13:52:01,618:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:01,626:INFO:Creating metrics dataframe
2023-08-08 13:52:01,649:INFO:Initializing Elastic Net
2023-08-08 13:52:01,649:INFO:Total runtime is 0.42586806615193684 minutes
2023-08-08 13:52:01,658:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:01,658:INFO:Initializing create_model()
2023-08-08 13:52:01,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:01,659:INFO:Checking exceptions
2023-08-08 13:52:01,659:INFO:Importing libraries
2023-08-08 13:52:01,660:INFO:Copying training dataset
2023-08-08 13:52:01,674:INFO:Defining folds
2023-08-08 13:52:01,674:INFO:Declaring metric variables
2023-08-08 13:52:01,684:INFO:Importing untrained model
2023-08-08 13:52:01,697:INFO:Elastic Net Imported successfully
2023-08-08 13:52:01,718:INFO:Starting cross validation
2023-08-08 13:52:01,726:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:06,846:INFO:Calculating mean and std
2023-08-08 13:52:06,849:INFO:Creating metrics dataframe
2023-08-08 13:52:07,331:INFO:Uploading results into container
2023-08-08 13:52:07,333:INFO:Uploading model into container now
2023-08-08 13:52:07,334:INFO:_master_model_container: 4
2023-08-08 13:52:07,334:INFO:_display_container: 2
2023-08-08 13:52:07,334:INFO:ElasticNet(random_state=145)
2023-08-08 13:52:07,334:INFO:create_model() successfully completed......................................
2023-08-08 13:52:07,429:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:07,429:INFO:Creating metrics dataframe
2023-08-08 13:52:07,456:INFO:Initializing Least Angle Regression
2023-08-08 13:52:07,456:INFO:Total runtime is 0.5226468761761983 minutes
2023-08-08 13:52:07,465:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:07,465:INFO:Initializing create_model()
2023-08-08 13:52:07,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:07,466:INFO:Checking exceptions
2023-08-08 13:52:07,466:INFO:Importing libraries
2023-08-08 13:52:07,466:INFO:Copying training dataset
2023-08-08 13:52:07,478:INFO:Defining folds
2023-08-08 13:52:07,478:INFO:Declaring metric variables
2023-08-08 13:52:07,490:INFO:Importing untrained model
2023-08-08 13:52:07,500:INFO:Least Angle Regression Imported successfully
2023-08-08 13:52:07,522:INFO:Starting cross validation
2023-08-08 13:52:07,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:07,904:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:07,918:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:07,920:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:07,962:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:09,447:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:09,463:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:09,463:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:09,636:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:10,894:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:10,902:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:12,746:INFO:Calculating mean and std
2023-08-08 13:52:12,749:INFO:Creating metrics dataframe
2023-08-08 13:52:13,144:INFO:Uploading results into container
2023-08-08 13:52:13,145:INFO:Uploading model into container now
2023-08-08 13:52:13,146:INFO:_master_model_container: 5
2023-08-08 13:52:13,146:INFO:_display_container: 2
2023-08-08 13:52:13,147:INFO:Lars(random_state=145)
2023-08-08 13:52:13,147:INFO:create_model() successfully completed......................................
2023-08-08 13:52:13,230:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:13,230:INFO:Creating metrics dataframe
2023-08-08 13:52:13,252:INFO:Initializing Lasso Least Angle Regression
2023-08-08 13:52:13,252:INFO:Total runtime is 0.6192441542943319 minutes
2023-08-08 13:52:13,257:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:13,257:INFO:Initializing create_model()
2023-08-08 13:52:13,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:13,258:INFO:Checking exceptions
2023-08-08 13:52:13,259:INFO:Importing libraries
2023-08-08 13:52:13,259:INFO:Copying training dataset
2023-08-08 13:52:13,269:INFO:Defining folds
2023-08-08 13:52:13,269:INFO:Declaring metric variables
2023-08-08 13:52:13,276:INFO:Importing untrained model
2023-08-08 13:52:13,288:INFO:Lasso Least Angle Regression Imported successfully
2023-08-08 13:52:13,305:INFO:Starting cross validation
2023-08-08 13:52:13,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:13,717:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:13,725:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:13,733:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:13,749:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:15,237:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:15,266:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:15,275:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:15,337:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:16,658:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:16,675:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-08-08 13:52:18,462:INFO:Calculating mean and std
2023-08-08 13:52:18,465:INFO:Creating metrics dataframe
2023-08-08 13:52:18,983:INFO:Uploading results into container
2023-08-08 13:52:18,985:INFO:Uploading model into container now
2023-08-08 13:52:18,986:INFO:_master_model_container: 6
2023-08-08 13:52:18,987:INFO:_display_container: 2
2023-08-08 13:52:18,988:INFO:LassoLars(random_state=145)
2023-08-08 13:52:18,988:INFO:create_model() successfully completed......................................
2023-08-08 13:52:19,080:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:19,080:INFO:Creating metrics dataframe
2023-08-08 13:52:19,108:INFO:Initializing Orthogonal Matching Pursuit
2023-08-08 13:52:19,108:INFO:Total runtime is 0.7168496211369833 minutes
2023-08-08 13:52:19,120:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:19,120:INFO:Initializing create_model()
2023-08-08 13:52:19,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:19,121:INFO:Checking exceptions
2023-08-08 13:52:19,121:INFO:Importing libraries
2023-08-08 13:52:19,122:INFO:Copying training dataset
2023-08-08 13:52:19,150:INFO:Defining folds
2023-08-08 13:52:19,150:INFO:Declaring metric variables
2023-08-08 13:52:19,184:INFO:Importing untrained model
2023-08-08 13:52:19,197:INFO:Orthogonal Matching Pursuit Imported successfully
2023-08-08 13:52:19,220:INFO:Starting cross validation
2023-08-08 13:52:19,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:19,611:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:19,611:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:19,619:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:19,635:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:21,102:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:21,170:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:21,239:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:21,271:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:22,637:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:22,770:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-08-08 13:52:24,901:INFO:Calculating mean and std
2023-08-08 13:52:24,903:INFO:Creating metrics dataframe
2023-08-08 13:52:25,335:INFO:Uploading results into container
2023-08-08 13:52:25,337:INFO:Uploading model into container now
2023-08-08 13:52:25,337:INFO:_master_model_container: 7
2023-08-08 13:52:25,337:INFO:_display_container: 2
2023-08-08 13:52:25,338:INFO:OrthogonalMatchingPursuit()
2023-08-08 13:52:25,338:INFO:create_model() successfully completed......................................
2023-08-08 13:52:25,419:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:25,419:INFO:Creating metrics dataframe
2023-08-08 13:52:25,442:INFO:Initializing Bayesian Ridge
2023-08-08 13:52:25,442:INFO:Total runtime is 0.8224173188209534 minutes
2023-08-08 13:52:25,451:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:25,452:INFO:Initializing create_model()
2023-08-08 13:52:25,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:25,452:INFO:Checking exceptions
2023-08-08 13:52:25,453:INFO:Importing libraries
2023-08-08 13:52:25,453:INFO:Copying training dataset
2023-08-08 13:52:25,460:INFO:Defining folds
2023-08-08 13:52:25,465:INFO:Declaring metric variables
2023-08-08 13:52:25,474:INFO:Importing untrained model
2023-08-08 13:52:25,489:INFO:Bayesian Ridge Imported successfully
2023-08-08 13:52:25,511:INFO:Starting cross validation
2023-08-08 13:52:25,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:31,404:INFO:Calculating mean and std
2023-08-08 13:52:31,407:INFO:Creating metrics dataframe
2023-08-08 13:52:31,881:INFO:Uploading results into container
2023-08-08 13:52:31,882:INFO:Uploading model into container now
2023-08-08 13:52:31,883:INFO:_master_model_container: 8
2023-08-08 13:52:31,883:INFO:_display_container: 2
2023-08-08 13:52:31,883:INFO:BayesianRidge()
2023-08-08 13:52:31,884:INFO:create_model() successfully completed......................................
2023-08-08 13:52:31,970:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:31,971:INFO:Creating metrics dataframe
2023-08-08 13:52:31,993:INFO:Initializing Passive Aggressive Regressor
2023-08-08 13:52:31,994:INFO:Total runtime is 0.9316183884938558 minutes
2023-08-08 13:52:32,001:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:32,002:INFO:Initializing create_model()
2023-08-08 13:52:32,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:32,002:INFO:Checking exceptions
2023-08-08 13:52:32,002:INFO:Importing libraries
2023-08-08 13:52:32,003:INFO:Copying training dataset
2023-08-08 13:52:32,014:INFO:Defining folds
2023-08-08 13:52:32,014:INFO:Declaring metric variables
2023-08-08 13:52:32,024:INFO:Importing untrained model
2023-08-08 13:52:32,033:INFO:Passive Aggressive Regressor Imported successfully
2023-08-08 13:52:32,049:INFO:Starting cross validation
2023-08-08 13:52:32,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:37,440:INFO:Calculating mean and std
2023-08-08 13:52:37,442:INFO:Creating metrics dataframe
2023-08-08 13:52:37,875:INFO:Uploading results into container
2023-08-08 13:52:37,877:INFO:Uploading model into container now
2023-08-08 13:52:37,878:INFO:_master_model_container: 9
2023-08-08 13:52:37,878:INFO:_display_container: 2
2023-08-08 13:52:37,878:INFO:PassiveAggressiveRegressor(random_state=145)
2023-08-08 13:52:37,879:INFO:create_model() successfully completed......................................
2023-08-08 13:52:37,961:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:37,961:INFO:Creating metrics dataframe
2023-08-08 13:52:37,983:INFO:Initializing Huber Regressor
2023-08-08 13:52:37,984:INFO:Total runtime is 1.0314348379770915 minutes
2023-08-08 13:52:37,990:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:37,992:INFO:Initializing create_model()
2023-08-08 13:52:37,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:37,992:INFO:Checking exceptions
2023-08-08 13:52:37,993:INFO:Importing libraries
2023-08-08 13:52:37,993:INFO:Copying training dataset
2023-08-08 13:52:38,002:INFO:Defining folds
2023-08-08 13:52:38,002:INFO:Declaring metric variables
2023-08-08 13:52:38,012:INFO:Importing untrained model
2023-08-08 13:52:38,021:INFO:Huber Regressor Imported successfully
2023-08-08 13:52:38,040:INFO:Starting cross validation
2023-08-08 13:52:38,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:43,381:INFO:Calculating mean and std
2023-08-08 13:52:43,384:INFO:Creating metrics dataframe
2023-08-08 13:52:43,817:INFO:Uploading results into container
2023-08-08 13:52:43,818:INFO:Uploading model into container now
2023-08-08 13:52:43,819:INFO:_master_model_container: 10
2023-08-08 13:52:43,820:INFO:_display_container: 2
2023-08-08 13:52:43,820:INFO:HuberRegressor()
2023-08-08 13:52:43,822:INFO:create_model() successfully completed......................................
2023-08-08 13:52:43,910:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:43,911:INFO:Creating metrics dataframe
2023-08-08 13:52:43,942:INFO:Initializing K Neighbors Regressor
2023-08-08 13:52:43,944:INFO:Total runtime is 1.1307780226071675 minutes
2023-08-08 13:52:43,952:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:43,953:INFO:Initializing create_model()
2023-08-08 13:52:43,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:43,953:INFO:Checking exceptions
2023-08-08 13:52:43,953:INFO:Importing libraries
2023-08-08 13:52:43,953:INFO:Copying training dataset
2023-08-08 13:52:43,967:INFO:Defining folds
2023-08-08 13:52:43,968:INFO:Declaring metric variables
2023-08-08 13:52:43,979:INFO:Importing untrained model
2023-08-08 13:52:43,991:INFO:K Neighbors Regressor Imported successfully
2023-08-08 13:52:44,009:INFO:Starting cross validation
2023-08-08 13:52:44,017:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:49,488:INFO:Calculating mean and std
2023-08-08 13:52:49,491:INFO:Creating metrics dataframe
2023-08-08 13:52:49,954:INFO:Uploading results into container
2023-08-08 13:52:49,956:INFO:Uploading model into container now
2023-08-08 13:52:49,956:INFO:_master_model_container: 11
2023-08-08 13:52:49,956:INFO:_display_container: 2
2023-08-08 13:52:49,957:INFO:KNeighborsRegressor(n_jobs=-1)
2023-08-08 13:52:49,957:INFO:create_model() successfully completed......................................
2023-08-08 13:52:50,041:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:50,041:INFO:Creating metrics dataframe
2023-08-08 13:52:50,064:INFO:Initializing Decision Tree Regressor
2023-08-08 13:52:50,065:INFO:Total runtime is 1.2327950318654377 minutes
2023-08-08 13:52:50,071:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:50,072:INFO:Initializing create_model()
2023-08-08 13:52:50,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:50,072:INFO:Checking exceptions
2023-08-08 13:52:50,072:INFO:Importing libraries
2023-08-08 13:52:50,073:INFO:Copying training dataset
2023-08-08 13:52:50,081:INFO:Defining folds
2023-08-08 13:52:50,081:INFO:Declaring metric variables
2023-08-08 13:52:50,088:INFO:Importing untrained model
2023-08-08 13:52:50,099:INFO:Decision Tree Regressor Imported successfully
2023-08-08 13:52:50,123:INFO:Starting cross validation
2023-08-08 13:52:50,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:52:55,596:INFO:Calculating mean and std
2023-08-08 13:52:55,598:INFO:Creating metrics dataframe
2023-08-08 13:52:56,038:INFO:Uploading results into container
2023-08-08 13:52:56,041:INFO:Uploading model into container now
2023-08-08 13:52:56,042:INFO:_master_model_container: 12
2023-08-08 13:52:56,043:INFO:_display_container: 2
2023-08-08 13:52:56,044:INFO:DecisionTreeRegressor(random_state=145)
2023-08-08 13:52:56,044:INFO:create_model() successfully completed......................................
2023-08-08 13:52:56,121:INFO:SubProcess create_model() end ==================================
2023-08-08 13:52:56,121:INFO:Creating metrics dataframe
2023-08-08 13:52:56,145:INFO:Initializing Random Forest Regressor
2023-08-08 13:52:56,146:INFO:Total runtime is 1.3341391324996947 minutes
2023-08-08 13:52:56,150:INFO:SubProcess create_model() called ==================================
2023-08-08 13:52:56,151:INFO:Initializing create_model()
2023-08-08 13:52:56,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:52:56,152:INFO:Checking exceptions
2023-08-08 13:52:56,152:INFO:Importing libraries
2023-08-08 13:52:56,154:INFO:Copying training dataset
2023-08-08 13:52:56,163:INFO:Defining folds
2023-08-08 13:52:56,163:INFO:Declaring metric variables
2023-08-08 13:52:56,178:INFO:Importing untrained model
2023-08-08 13:52:56,189:INFO:Random Forest Regressor Imported successfully
2023-08-08 13:52:56,211:INFO:Starting cross validation
2023-08-08 13:52:56,217:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:00,504:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:03,710:INFO:Calculating mean and std
2023-08-08 13:53:03,711:INFO:Creating metrics dataframe
2023-08-08 13:53:04,165:INFO:Uploading results into container
2023-08-08 13:53:04,166:INFO:Uploading model into container now
2023-08-08 13:53:04,167:INFO:_master_model_container: 13
2023-08-08 13:53:04,167:INFO:_display_container: 2
2023-08-08 13:53:04,169:INFO:RandomForestRegressor(n_jobs=-1, random_state=145)
2023-08-08 13:53:04,170:INFO:create_model() successfully completed......................................
2023-08-08 13:53:04,267:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:04,267:INFO:Creating metrics dataframe
2023-08-08 13:53:04,290:INFO:Initializing Extra Trees Regressor
2023-08-08 13:53:04,291:INFO:Total runtime is 1.469889191786448 minutes
2023-08-08 13:53:04,296:INFO:SubProcess create_model() called ==================================
2023-08-08 13:53:04,296:INFO:Initializing create_model()
2023-08-08 13:53:04,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:04,297:INFO:Checking exceptions
2023-08-08 13:53:04,297:INFO:Importing libraries
2023-08-08 13:53:04,297:INFO:Copying training dataset
2023-08-08 13:53:04,307:INFO:Defining folds
2023-08-08 13:53:04,307:INFO:Declaring metric variables
2023-08-08 13:53:04,317:INFO:Importing untrained model
2023-08-08 13:53:04,325:INFO:Extra Trees Regressor Imported successfully
2023-08-08 13:53:04,348:INFO:Starting cross validation
2023-08-08 13:53:04,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:11,034:INFO:Calculating mean and std
2023-08-08 13:53:11,037:INFO:Creating metrics dataframe
2023-08-08 13:53:11,499:INFO:Uploading results into container
2023-08-08 13:53:11,501:INFO:Uploading model into container now
2023-08-08 13:53:11,501:INFO:_master_model_container: 14
2023-08-08 13:53:11,501:INFO:_display_container: 2
2023-08-08 13:53:11,504:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=145)
2023-08-08 13:53:11,505:INFO:create_model() successfully completed......................................
2023-08-08 13:53:11,585:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:11,585:INFO:Creating metrics dataframe
2023-08-08 13:53:11,610:INFO:Initializing AdaBoost Regressor
2023-08-08 13:53:11,610:INFO:Total runtime is 1.5918766101201374 minutes
2023-08-08 13:53:11,616:INFO:SubProcess create_model() called ==================================
2023-08-08 13:53:11,617:INFO:Initializing create_model()
2023-08-08 13:53:11,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:11,617:INFO:Checking exceptions
2023-08-08 13:53:11,617:INFO:Importing libraries
2023-08-08 13:53:11,618:INFO:Copying training dataset
2023-08-08 13:53:11,625:INFO:Defining folds
2023-08-08 13:53:11,625:INFO:Declaring metric variables
2023-08-08 13:53:11,632:INFO:Importing untrained model
2023-08-08 13:53:11,643:INFO:AdaBoost Regressor Imported successfully
2023-08-08 13:53:11,664:INFO:Starting cross validation
2023-08-08 13:53:11,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:17,381:INFO:Calculating mean and std
2023-08-08 13:53:17,383:INFO:Creating metrics dataframe
2023-08-08 13:53:17,865:INFO:Uploading results into container
2023-08-08 13:53:17,866:INFO:Uploading model into container now
2023-08-08 13:53:17,867:INFO:_master_model_container: 15
2023-08-08 13:53:17,868:INFO:_display_container: 2
2023-08-08 13:53:17,869:INFO:AdaBoostRegressor(random_state=145)
2023-08-08 13:53:17,869:INFO:create_model() successfully completed......................................
2023-08-08 13:53:17,950:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:17,950:INFO:Creating metrics dataframe
2023-08-08 13:53:17,973:INFO:Initializing Gradient Boosting Regressor
2023-08-08 13:53:17,973:INFO:Total runtime is 1.6979351878166198 minutes
2023-08-08 13:53:17,977:INFO:SubProcess create_model() called ==================================
2023-08-08 13:53:17,978:INFO:Initializing create_model()
2023-08-08 13:53:17,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:17,980:INFO:Checking exceptions
2023-08-08 13:53:17,980:INFO:Importing libraries
2023-08-08 13:53:17,981:INFO:Copying training dataset
2023-08-08 13:53:17,991:INFO:Defining folds
2023-08-08 13:53:17,991:INFO:Declaring metric variables
2023-08-08 13:53:17,998:INFO:Importing untrained model
2023-08-08 13:53:18,007:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 13:53:18,023:INFO:Starting cross validation
2023-08-08 13:53:18,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:24,874:INFO:Calculating mean and std
2023-08-08 13:53:24,879:INFO:Creating metrics dataframe
2023-08-08 13:53:25,354:INFO:Uploading results into container
2023-08-08 13:53:25,356:INFO:Uploading model into container now
2023-08-08 13:53:25,358:INFO:_master_model_container: 16
2023-08-08 13:53:25,358:INFO:_display_container: 2
2023-08-08 13:53:25,359:INFO:GradientBoostingRegressor(random_state=145)
2023-08-08 13:53:25,359:INFO:create_model() successfully completed......................................
2023-08-08 13:53:25,442:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:25,442:INFO:Creating metrics dataframe
2023-08-08 13:53:25,470:INFO:Initializing Light Gradient Boosting Machine
2023-08-08 13:53:25,470:INFO:Total runtime is 1.8228771646817525 minutes
2023-08-08 13:53:25,475:INFO:SubProcess create_model() called ==================================
2023-08-08 13:53:25,475:INFO:Initializing create_model()
2023-08-08 13:53:25,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:25,476:INFO:Checking exceptions
2023-08-08 13:53:25,476:INFO:Importing libraries
2023-08-08 13:53:25,476:INFO:Copying training dataset
2023-08-08 13:53:25,491:INFO:Defining folds
2023-08-08 13:53:25,492:INFO:Declaring metric variables
2023-08-08 13:53:25,503:INFO:Importing untrained model
2023-08-08 13:53:25,514:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-08 13:53:25,528:INFO:Starting cross validation
2023-08-08 13:53:25,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:31,837:INFO:Calculating mean and std
2023-08-08 13:53:31,840:INFO:Creating metrics dataframe
2023-08-08 13:53:32,329:INFO:Uploading results into container
2023-08-08 13:53:32,330:INFO:Uploading model into container now
2023-08-08 13:53:32,330:INFO:_master_model_container: 17
2023-08-08 13:53:32,331:INFO:_display_container: 2
2023-08-08 13:53:32,331:INFO:LGBMRegressor(n_jobs=-1, random_state=145)
2023-08-08 13:53:32,331:INFO:create_model() successfully completed......................................
2023-08-08 13:53:32,410:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:32,410:INFO:Creating metrics dataframe
2023-08-08 13:53:32,440:INFO:Initializing Dummy Regressor
2023-08-08 13:53:32,440:INFO:Total runtime is 1.9390465299288433 minutes
2023-08-08 13:53:32,450:INFO:SubProcess create_model() called ==================================
2023-08-08 13:53:32,450:INFO:Initializing create_model()
2023-08-08 13:53:32,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF16DA80>, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:32,451:INFO:Checking exceptions
2023-08-08 13:53:32,451:INFO:Importing libraries
2023-08-08 13:53:32,451:INFO:Copying training dataset
2023-08-08 13:53:32,458:INFO:Defining folds
2023-08-08 13:53:32,458:INFO:Declaring metric variables
2023-08-08 13:53:32,467:INFO:Importing untrained model
2023-08-08 13:53:32,472:INFO:Dummy Regressor Imported successfully
2023-08-08 13:53:32,484:INFO:Starting cross validation
2023-08-08 13:53:32,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:38,319:INFO:Calculating mean and std
2023-08-08 13:53:38,320:INFO:Creating metrics dataframe
2023-08-08 13:53:38,816:INFO:Uploading results into container
2023-08-08 13:53:38,817:INFO:Uploading model into container now
2023-08-08 13:53:38,818:INFO:_master_model_container: 18
2023-08-08 13:53:38,818:INFO:_display_container: 2
2023-08-08 13:53:38,819:INFO:DummyRegressor()
2023-08-08 13:53:38,819:INFO:create_model() successfully completed......................................
2023-08-08 13:53:38,902:INFO:SubProcess create_model() end ==================================
2023-08-08 13:53:38,902:INFO:Creating metrics dataframe
2023-08-08 13:53:38,946:INFO:Initializing create_model()
2023-08-08 13:53:38,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(random_state=145), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:38,947:INFO:Checking exceptions
2023-08-08 13:53:38,950:INFO:Importing libraries
2023-08-08 13:53:38,950:INFO:Copying training dataset
2023-08-08 13:53:38,959:INFO:Defining folds
2023-08-08 13:53:38,960:INFO:Declaring metric variables
2023-08-08 13:53:38,960:INFO:Importing untrained model
2023-08-08 13:53:38,960:INFO:Declaring custom model
2023-08-08 13:53:38,961:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 13:53:38,961:INFO:Cross validation set to False
2023-08-08 13:53:38,961:INFO:Fitting Model
2023-08-08 13:53:39,852:INFO:GradientBoostingRegressor(random_state=145)
2023-08-08 13:53:39,852:INFO:create_model() successfully completed......................................
2023-08-08 13:53:40,005:INFO:_master_model_container: 18
2023-08-08 13:53:40,005:INFO:_display_container: 2
2023-08-08 13:53:40,006:INFO:GradientBoostingRegressor(random_state=145)
2023-08-08 13:53:40,006:INFO:compare_models() successfully completed......................................
2023-08-08 13:53:40,154:INFO:Initializing create_model()
2023-08-08 13:53:40,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=gbr, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-08 13:53:40,154:INFO:Checking exceptions
2023-08-08 13:53:40,193:INFO:Importing libraries
2023-08-08 13:53:40,193:INFO:Copying training dataset
2023-08-08 13:53:40,209:INFO:Defining folds
2023-08-08 13:53:40,209:INFO:Declaring metric variables
2023-08-08 13:53:40,221:INFO:Importing untrained model
2023-08-08 13:53:40,231:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 13:53:40,251:INFO:Starting cross validation
2023-08-08 13:53:40,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 13:53:45,874:INFO:Calculating mean and std
2023-08-08 13:53:45,876:INFO:Creating metrics dataframe
2023-08-08 13:53:45,887:INFO:Finalizing model
2023-08-08 13:53:46,593:INFO:Uploading results into container
2023-08-08 13:53:46,594:INFO:Uploading model into container now
2023-08-08 13:53:46,612:INFO:_master_model_container: 19
2023-08-08 13:53:46,612:INFO:_display_container: 3
2023-08-08 13:53:46,613:INFO:GradientBoostingRegressor(random_state=145)
2023-08-08 13:53:46,613:INFO:create_model() successfully completed......................................
2023-08-08 13:53:46,755:INFO:Initializing tune_model()
2023-08-08 13:53:46,755:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=145), fold=10, round=4, n_iter=100, custom_grid={'learning_rate': [0.05, 0.08, 0.1], 'max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'subsample': [0.8, 0.9, 1, 1.1], 'n_estimators': [100, 200, 300, 400, 500]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>)
2023-08-08 13:53:46,755:INFO:Checking exceptions
2023-08-08 13:53:46,795:INFO:Copying training dataset
2023-08-08 13:53:46,810:INFO:Checking base model
2023-08-08 13:53:46,811:INFO:Base model : Gradient Boosting Regressor
2023-08-08 13:53:46,822:INFO:Declaring metric variables
2023-08-08 13:53:46,833:INFO:Defining Hyperparameters
2023-08-08 13:53:46,934:INFO:custom_grid: {'actual_estimator__learning_rate': [0.05, 0.08, 0.1], 'actual_estimator__max_depth': [1, 2, 3, 4, 5, 6, 7, 8], 'actual_estimator__subsample': [0.8, 0.9, 1, 1.1], 'actual_estimator__n_estimators': [100, 200, 300, 400, 500]}
2023-08-08 13:53:46,934:INFO:Tuning with n_jobs=-1
2023-08-08 13:53:46,934:INFO:Initializing RandomizedSearchCV
2023-08-08 13:53:48,707:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:48,709:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:48,733:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:48,832:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:51,622:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:51,630:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:51,764:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:51,810:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:54,457:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:54,516:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:54,574:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:54,721:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:57,222:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:57,279:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:57,295:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:57,562:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:59,736:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:59,846:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:53:59,889:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:00,421:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:02,681:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:03,115:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:03,941:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:04,770:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:05,893:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:06,471:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:07,083:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:07,968:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:09,032:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:09,649:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:10,429:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:11,228:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:12,343:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:13,025:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.15s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:13,966:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:15,135:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.19s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:16,285:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:16,961:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:18,710:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.28s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:20,928:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:23,560:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:25,152:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:27,456:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.39s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:28,831:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:30,374:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:31,239:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.34s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:32,459:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:34,065:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:34,204:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.37s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:35,432:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:35,786:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:38,016:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:39,547:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.49s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:39,738:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:42,878:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:48,162:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:49,098:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:50,156:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.11s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:50,360:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:51,299:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:51,349:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:52,719:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:53,620:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.16s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:53,660:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:55,183:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:56,146:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.15s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:56,924:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:54:56,958:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.36s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:57,840:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:54:59,109:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:00,016:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:00,305:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:00,786:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:02,271:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:02,924:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:03,153:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:04,145:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:05,679:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:06,717:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.44s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:07,005:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:07,087:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:09,262:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:09,602:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:09,637:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.29s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:10,968:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.23s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:12,245:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.24s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:13,571:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.35s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:13,646:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.15s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:14,128:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:15,951:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.04s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:16,266:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:16,456:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:17,912:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:18,782:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:19,746:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:20,632:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:21,009:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:23,151:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.21s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:23,367:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:23,556:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:23,949:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:25,660:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:26,334:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:27,209:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:27,759:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.27s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:29,483:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:29,889:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:29,899:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:30,542:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:32,391:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:33,027:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:33,879:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:34,163:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.13s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:55:36,500:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:36,875:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.45s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:36,916:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.49s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:39,553:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:39,909:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:39,972:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:40,414:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:43,572:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:45,368:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:46,581:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:51,373:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:54,167:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:55,352:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:55:58,296:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:01,079:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:02,256:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:02,979:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:03,590:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:04,454:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.15s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:04,798:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:05,731:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:06,864:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:06,991:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:08,212:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:08,924:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.11s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:09,596:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:11,024:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:12,552:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.48s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:12,842:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:13,963:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:15,095:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:15,597:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:16,338:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:18,432:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:19,663:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:21,677:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.38s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:22,660:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:22,702:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.33s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:23,864:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:24,627:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:25,843:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:27,131:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:28,796:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:30,313:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.29s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:31,903:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:32,128:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.38s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:32,927:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.30s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:33,603:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:35,151:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.37s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:35,948:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:39,011:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.26s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:40,032:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:40,057:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:40,334:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:41,255:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:42,290:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.28s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:42,427:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.31s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:43,009:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:46,470:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:47,067:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:47,251:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:47,756:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:49,215:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.43s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:50,251:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:50,421:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:51,895:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:56,607:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:56,742:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:56,785:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:56:59,126:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.34s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:59,363:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.44s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:56:59,501:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.40s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:01,882:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:57:02,994:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:03,137:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:03,282:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:05,456:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.20s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:06,995:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:07,040:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:07,334:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:10,699:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:10,740:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:11,070:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:13,396:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 13:57:14,848:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:17,147:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 13:57:18,600:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:09,993:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:11,867:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.47s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:14,160:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:19,857:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:22,431:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:24,500:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:26,251:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:36,034:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:38,478:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:40,432:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:46,450:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:49,239:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:50,290:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:50,523:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:51,685:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:52,203:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:53,566:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:54,215:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:54,543:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:55,442:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:55,824:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:56,993:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:57,027:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:58,129:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:58,552:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:00:59,333:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:00:59,721:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:00,446:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:00,973:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:02,201:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:02,478:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:03,648:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:10,558:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:14,733:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:14,771:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:15,877:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:16,025:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:17,007:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:18,343:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:19,418:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:20,376:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:21,709:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:22,618:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:23,716:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:24,349:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:25,596:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:26,630:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:26,784:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:27,991:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:28,120:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:29,260:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:29,550:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:30,432:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:30,777:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:31,610:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:31,955:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:33,164:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:33,222:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:34,658:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:34,661:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:35,695:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:36,174:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:36,913:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:37,231:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:38,356:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:38,496:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:39,905:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:39,912:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:40,814:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:41,363:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:42,159:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:42,362:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:43,641:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:43,689:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:45,002:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:45,155:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:46,182:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:46,590:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:47,433:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:47,663:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:49,078:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:01:49,092:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:01:50,922:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:00,561:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:01,542:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:02,274:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:02,693:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:03,254:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:03,977:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:04,767:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.21s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:05,862:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:06,565:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:07,747:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:08,276:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:09,160:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:09,601:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:11,018:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:11,104:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:12,668:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:12,861:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:14,050:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:02:14,656:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:16,351:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.23s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:02:57,422:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:03,068:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:17,015:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:18,192:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:18,424:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:19,501:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:19,678:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:20,911:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:21,038:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:22,411:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:22,631:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:23,954:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:24,137:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:25,165:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:25,487:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:26,647:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:26,905:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:28,370:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:28,382:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:29,775:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:29,875:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:31,354:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:31,828:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:33,550:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:34,066:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:35,313:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:35,860:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:36,653:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:37,189:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:38,501:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:38,584:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:40,242:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:41,728:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:42,727:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:43,429:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:43,648:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:44,450:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:45,162:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:45,383:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:47,039:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:48,959:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:50,580:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:50,733:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:51,337:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:52,612:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:52,661:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:53,245:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:54,914:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.19s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:57,095:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:59,073:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:03:59,155:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:03:59,644:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:01,290:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:01,353:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:01,818:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:03,743:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.24s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:04,969:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:07,061:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.09s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:08,024:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:08,181:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:10,126:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:10,473:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.17s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:24,857:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:28,502:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:29,782:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:31,072:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:32,206:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:33,481:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:35,920:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:37,219:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:38,349:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:39,623:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:40,668:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:44,504:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:46,187:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:47,694:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:47,888:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:49,143:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:50,618:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:51,923:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:52,177:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:53,419:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:54,817:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:56,249:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:04:56,257:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:57,524:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:04:59,001:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:00,469:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:01,827:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:03,317:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:03,414:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:05,071:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:05,148:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:06,563:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:06,709:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:08,009:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:08,104:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:09,576:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:09,927:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:11,559:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:13,334:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:14,786:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:15,154:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:16,969:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:17,067:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:18,678:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:18,734:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:20,068:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:20,320:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:21,896:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:22,381:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:24,087:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:24,365:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:25,705:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:25,960:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:27,277:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:27,591:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:29,095:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:29,267:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:30,810:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:31,400:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:05:33,592:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.22s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:56,666:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:05:58,020:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:01,321:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:04,370:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:10,333:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:11,797:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:13,165:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:13,332:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:14,650:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:14,889:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:17,237:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:17,483:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.25s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:19,345:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:19,717:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:21,564:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:21,693:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:23,476:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:23,823:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:25,741:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:26,082:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:28,005:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:28,141:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:30,385:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:30,763:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:33,684:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.35s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:49,145:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:50,498:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:50,855:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:52,401:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:52,783:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:54,968:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:55,293:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.47s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:57,398:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:57,601:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:06:59,355:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:06:59,373:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:01,386:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:02,803:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:04,581:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:04,683:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:06,702:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:07,035:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:08,951:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:09,058:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:10,785:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:51,688:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:51,823:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:53,185:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:53,771:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:55,198:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:57,865:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:07:59,154:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:07:59,421:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:00,770:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:02,579:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:04,507:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:17,008:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:18,516:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:19,193:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:20,578:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:20,794:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:22,634:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:22,953:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.01s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:24,567:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:24,689:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:26,037:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:26,830:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:27,898:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:28,292:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:29,990:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:30,580:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.10s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:31,777:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:33,440:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:34,078:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:08:35,441:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.00s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:08:36,010:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:01,177:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:02,824:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:02,967:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:05,087:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:05,131:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:06,413:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:07,001:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:08,387:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:08,709:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:10,183:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:11,032:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:12,254:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:14,017:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:17,674:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:19,353:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:20,411:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:22,068:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:22,663:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:24,254:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:25,122:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:26,525:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:27,178:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:28,722:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:28,814:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:30,303:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:30,737:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:32,334:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:33,601:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:34,962:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:35,082:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:36,756:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.92s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:36,938:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:38,423:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:38,592:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:40,305:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:41,456:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.05s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:43,553:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:44,017:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:45,711:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:45,805:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:47,385:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:47,677:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:49,078:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:49,330:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:50,732:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:51,075:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:52,801:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:53,085:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:54,558:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:56,240:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:57,742:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:09:58,015:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:09:59,930:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:00,474:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:02,388:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.93s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:14,024:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:14,093:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:15,446:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:15,818:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:17,028:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:17,361:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:18,601:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:19,245:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:20,435:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:22,440:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:24,653:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:24,974:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:26,320:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:27,138:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:29,139:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:29,558:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:31,611:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.06s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:32,734:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:34,086:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:34,964:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:36,174:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:37,122:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:38,461:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:39,784:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:40,418:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:41,568:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:43,280:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:46,780:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:47,304:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:48,463:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:10:49,287:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:10:50,578:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:29,797:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:31,379:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:32,818:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:34,262:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:37,285:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:38,726:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:40,077:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:41,578:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:44,895:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:45,378:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:11:46,941:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:49,043:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:49,617:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:11:50,746:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:52,419:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:53,731:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:55,422:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:56,816:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:58,227:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:11:58,640:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:11:59,800:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:01,361:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:03,044:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:04,475:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:05,966:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:07,576:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:08,957:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:10,639:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:12,062:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:13,763:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:14,733:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:16,539:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:16,901:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:19,029:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.11s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:19,049:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.32s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:21,136:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:21,214:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:22,718:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:22,789:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:24,473:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:24,924:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:26,619:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:27,142:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:28,705:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:28,836:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:30,367:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:30,650:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:32,292:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:32,656:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:34,329:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:49,404:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:50,503:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:52,015:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:52,348:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:53,800:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:54,213:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:55,628:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:55,941:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:57,362:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:57,451:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:12:58,892:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:12:59,105:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:00,597:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:01,614:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:02,852:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:04,305:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:04,648:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:06,129:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:07,056:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:08,465:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:09,071:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:10,673:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:10,694:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:12,347:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:12,728:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:14,303:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:14,595:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:16,228:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:16,338:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:17,921:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:18,203:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:19,876:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:20,400:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:22,003:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:22,285:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:24,269:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:13:24,415:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:13:26,393:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:10,808:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:12,505:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:14,581:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:21,508:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:23,282:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:25,059:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:27,131:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:30,645:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:32,543:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:34,316:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:37,623:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:40,960:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:42,679:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:44,355:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:48,326:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:50,655:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:51,082:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:14:52,382:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:53,177:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:14:54,389:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:56,304:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:57,886:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:14:59,922:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:01,442:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:03,287:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:32,510:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:33,185:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:34,545:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:35,361:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:36,522:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:38,196:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:38,861:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:40,079:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:42,170:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:44,075:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:46,163:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:47,846:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:49,843:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:51,597:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:53,118:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:53,475:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:55,230:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:55,460:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:57,255:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:15:58,262:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:15:59,927:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:00,854:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:02,456:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:02,677:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:04,494:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:04,705:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:06,407:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:07,226:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:08,969:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:09,997:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:11,620:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:12,538:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:14,181:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:14,393:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:15,996:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:16,608:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:18,365:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:18,567:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:20,351:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:21,327:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:23,013:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:23,142:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:24,808:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:25,392:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:27,056:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:27,802:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:29,396:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:29,628:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:31,574:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:32,129:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:33,812:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:16:34,639:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:16:36,606:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:19,129:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:19,517:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:21,117:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:22,164:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:23,639:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:24,403:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:25,645:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:28,074:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:30,251:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:32,414:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:34,562:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:36,549:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:38,699:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:40,592:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:42,057:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:42,068:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:43,955:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.96s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:44,454:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:46,627:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:47,660:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:49,474:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:50,345:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:52,185:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:52,595:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:54,506:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:55,398:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:57,284:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:17:57,886:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:17:59,817:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:00,419:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:02,325:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.95s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:03,253:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:05,309:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.08s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:24,023:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:25,395:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:25,798:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:27,333:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:28,038:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:29,538:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:30,699:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:32,129:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:32,694:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:34,057:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:35,135:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:36,414:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:37,251:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:38,610:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:39,126:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:40,587:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:41,472:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:18:42,893:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:46,353:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:18:50,458:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:09,662:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:24,652:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:25,933:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.65s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:26,720:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:28,172:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:28,858:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:30,269:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:31,184:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:32,626:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:33,535:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:34,977:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:35,643:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:37,054:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:37,780:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:39,171:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:39,826:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:41,175:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:41,783:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:43,253:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:43,789:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:45,234:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:46,632:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:48,819:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:50,329:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:50,712:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:52,357:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:52,993:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.88s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:54,729:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:55,870:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:19:57,523:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:19:58,552:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:20:00,182:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:00,638:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:20:02,302:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:03,207:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:20:04,893:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:05,629:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:20:07,230:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:08,523:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:20:10,205:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:12,523:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:31,603:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:33,539:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:35,678:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:37,744:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:39,780:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:43,950:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:45,775:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:47,972:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:50,112:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:52,259:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:54,296:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:56,685:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:20:58,843:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:00,677:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:02,937:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:05,082:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:07,150:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:09,287:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:11,304:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:13,358:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:15,244:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:17,501:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:19,636:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:21,675:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:25,858:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:27,773:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:29,961:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:46,152:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:47,584:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:47,997:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:49,741:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:50,790:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:52,199:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:53,148:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:54,642:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:55,883:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:57,250:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:21:57,932:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:21:59,323:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:00,431:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:01,984:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:02,649:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:04,141:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:05,249:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:06,792:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:07,870:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:09,481:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:26,124:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:27,869:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:27,990:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:30,087:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:30,762:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:32,656:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:33,795:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:35,650:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:36,333:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.86s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:38,099:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:39,832:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:41,718:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:43,077:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:45,836:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:47,254:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:47,824:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:49,478:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:50,000:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-08 14:22:51,584:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-08-08 14:22:57,878:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
230 fits failed out of a total of 1000.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
230 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\memory.py", line 655, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_gb.py", line 577, in fit
    self._check_params()
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_gb.py", line 337, in _check_params
    check_scalar(
  File "c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1489, in check_scalar
    raise ValueError(
ValueError: subsample == 1.1, must be <= 1.0.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-08-08 14:22:57,878:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_search.py:953: UserWarning: One or more of the test scores are non-finite: [-5970.28410539 -5970.73064454 -5981.96599647 -5973.19677739
 -5998.20605036            nan -4473.65959608 -4507.79015539
 -4551.05296036 -4402.11814722 -4402.41241613 -4583.34344255
 -4761.42168481 -4760.88770032 -4499.07056563 -4686.01291703
            nan -4689.80794852 -5047.47353978 -4792.73620098
 -5070.06780317 -5104.20017848 -5179.04230145            nan
 -5168.9297797             nan -4986.40204663            nan
 -5119.53643012 -5389.6513228             nan -5423.28208455
 -5431.98766708 -5436.21245879 -6014.57624681 -5979.18882486
 -5969.15908907 -5994.82319801 -5994.73216802 -5993.56393253
            nan            nan -4615.25277979 -4958.92724816
            nan -5085.90395102            nan -4792.15164608
 -4824.48189834 -5162.69420671            nan -5479.41307015
            nan            nan -5271.01090395 -5276.36532754
 -5251.49448347            nan -5282.27785344 -5333.06118024
            nan -5984.72191078 -5997.37894997 -6007.32319333
 -6010.21431022 -5992.97444436 -6015.75376621 -4506.76889558
 -4679.70622126 -4754.21474476            nan -4526.66841605
            nan -4700.30621106 -4716.53281644 -4869.1461489
            nan            nan -5151.22411801 -5259.66306966
 -5316.7226126             nan -4867.70524947            nan
 -5239.56317903 -5336.05971159 -5066.84884538 -5487.43774975
 -5225.55873554 -5306.07025072 -5243.11930731 -5329.11751165
 -5419.07321103 -5294.23931735 -5351.48720739 -5424.54463558
            nan -5351.27488734            nan -5354.15365384]
  warnings.warn(

2023-08-08 14:22:59,529:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 100, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.05}
2023-08-08 14:22:59,529:INFO:Hyperparameter search completed
2023-08-08 14:22:59,529:INFO:SubProcess create_model() called ==================================
2023-08-08 14:22:59,529:INFO:Initializing create_model()
2023-08-08 14:22:59,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(random_state=145), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D4EF0C4700>, model_only=True, return_train_score=False, kwargs={'subsample': 0.9, 'n_estimators': 100, 'max_depth': 3, 'learning_rate': 0.05})
2023-08-08 14:22:59,529:INFO:Checking exceptions
2023-08-08 14:22:59,529:INFO:Importing libraries
2023-08-08 14:22:59,529:INFO:Copying training dataset
2023-08-08 14:22:59,544:INFO:Defining folds
2023-08-08 14:22:59,544:INFO:Declaring metric variables
2023-08-08 14:22:59,544:INFO:Importing untrained model
2023-08-08 14:22:59,544:INFO:Declaring custom model
2023-08-08 14:22:59,544:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 14:22:59,566:INFO:Starting cross validation
2023-08-08 14:22:59,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 14:23:17,837:INFO:Calculating mean and std
2023-08-08 14:23:17,837:INFO:Creating metrics dataframe
2023-08-08 14:23:17,837:INFO:Finalizing model
2023-08-08 14:23:20,128:INFO:Uploading results into container
2023-08-08 14:23:20,143:INFO:Uploading model into container now
2023-08-08 14:23:20,143:INFO:_master_model_container: 20
2023-08-08 14:23:20,143:INFO:_display_container: 4
2023-08-08 14:23:20,143:INFO:GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9)
2023-08-08 14:23:20,143:INFO:create_model() successfully completed......................................
2023-08-08 14:23:20,228:INFO:SubProcess create_model() end ==================================
2023-08-08 14:23:20,228:INFO:choose_better activated
2023-08-08 14:23:20,228:INFO:SubProcess create_model() called ==================================
2023-08-08 14:23:20,228:INFO:Initializing create_model()
2023-08-08 14:23:20,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(random_state=145), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-08 14:23:20,228:INFO:Checking exceptions
2023-08-08 14:23:20,244:INFO:Importing libraries
2023-08-08 14:23:20,244:INFO:Copying training dataset
2023-08-08 14:23:20,244:INFO:Defining folds
2023-08-08 14:23:20,244:INFO:Declaring metric variables
2023-08-08 14:23:20,244:INFO:Importing untrained model
2023-08-08 14:23:20,244:INFO:Declaring custom model
2023-08-08 14:23:20,244:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 14:23:20,244:INFO:Starting cross validation
2023-08-08 14:23:20,244:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-08 14:23:36,300:INFO:Calculating mean and std
2023-08-08 14:23:36,300:INFO:Creating metrics dataframe
2023-08-08 14:23:36,302:INFO:Finalizing model
2023-08-08 14:23:38,118:INFO:Uploading results into container
2023-08-08 14:23:38,118:INFO:Uploading model into container now
2023-08-08 14:23:38,118:INFO:_master_model_container: 21
2023-08-08 14:23:38,118:INFO:_display_container: 5
2023-08-08 14:23:38,118:INFO:GradientBoostingRegressor(random_state=145)
2023-08-08 14:23:38,118:INFO:create_model() successfully completed......................................
2023-08-08 14:23:38,187:INFO:SubProcess create_model() end ==================================
2023-08-08 14:23:38,187:INFO:GradientBoostingRegressor(random_state=145) result for RMSE is 4540.4851
2023-08-08 14:23:38,187:INFO:GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9) result for RMSE is 4402.1181
2023-08-08 14:23:38,187:INFO:GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9) is best model
2023-08-08 14:23:38,187:INFO:choose_better completed
2023-08-08 14:23:38,203:INFO:_master_model_container: 21
2023-08-08 14:23:38,203:INFO:_display_container: 4
2023-08-08 14:23:38,203:INFO:GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9)
2023-08-08 14:23:38,203:INFO:tune_model() successfully completed......................................
2023-08-08 14:23:39,701:INFO:Initializing predict_model()
2023-08-08 14:23:39,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(random_state=145), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D4EBAB9750>)
2023-08-08 14:23:39,701:INFO:Checking exceptions
2023-08-08 14:23:39,701:INFO:Preloading libraries
2023-08-08 14:23:39,917:INFO:Initializing predict_model()
2023-08-08 14:23:39,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D4EDDA08B0>)
2023-08-08 14:23:39,917:INFO:Checking exceptions
2023-08-08 14:23:39,917:INFO:Preloading libraries
2023-08-08 14:23:40,127:INFO:Initializing plot_model()
2023-08-08 14:23:40,127:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=4, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, system=True)
2023-08-08 14:23:40,127:INFO:Checking exceptions
2023-08-08 14:23:40,143:INFO:Preloading libraries
2023-08-08 14:23:40,166:INFO:Copying training dataset
2023-08-08 14:23:40,166:INFO:Plot type: feature
2023-08-08 14:23:40,167:WARNING:No coef_ found. Trying feature_importances_
2023-08-08 14:23:40,818:INFO:Visual Rendered Successfully
2023-08-08 14:23:40,919:INFO:plot_model() successfully completed......................................
2023-08-08 14:23:40,981:INFO:Initializing plot_model()
2023-08-08 14:23:40,981:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=145), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, system=True)
2023-08-08 14:23:40,981:INFO:Checking exceptions
2023-08-08 14:23:40,997:INFO:Preloading libraries
2023-08-08 14:23:41,019:INFO:Copying training dataset
2023-08-08 14:23:41,019:INFO:Plot type: error
2023-08-08 14:23:41,182:INFO:Fitting Model
2023-08-08 14:23:41,182:WARNING:c:\Users\user\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2023-08-08 14:23:41,182:INFO:Scoring test/hold-out set
2023-08-08 14:23:41,968:INFO:Visual Rendered Successfully
2023-08-08 14:23:42,100:INFO:plot_model() successfully completed......................................
2023-08-08 14:23:42,129:INFO:Initializing finalize_model()
2023-08-08 14:23:42,129:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-08 14:23:42,144:INFO:Finalizing GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9)
2023-08-08 14:23:42,144:INFO:Initializing create_model()
2023-08-08 14:23:42,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D4F04C5DB0>, estimator=GradientBoostingRegressor(learning_rate=0.05, random_state=145, subsample=0.9), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-08 14:23:42,144:INFO:Checking exceptions
2023-08-08 14:23:42,144:INFO:Importing libraries
2023-08-08 14:23:42,144:INFO:Copying training dataset
2023-08-08 14:23:42,144:INFO:Defining folds
2023-08-08 14:23:42,144:INFO:Declaring metric variables
2023-08-08 14:23:42,144:INFO:Importing untrained model
2023-08-08 14:23:42,144:INFO:Declaring custom model
2023-08-08 14:23:42,144:INFO:Gradient Boosting Regressor Imported successfully
2023-08-08 14:23:42,160:INFO:Cross validation set to False
2023-08-08 14:23:42,160:INFO:Fitting Model
2023-08-08 14:23:42,670:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))])
2023-08-08 14:23:42,670:INFO:create_model() successfully completed......................................
2023-08-08 14:23:42,746:INFO:_master_model_container: 21
2023-08-08 14:23:42,746:INFO:_display_container: 6
2023-08-08 14:23:42,807:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))])
2023-08-08 14:23:42,807:INFO:finalize_model() successfully completed......................................
2023-08-08 14:23:42,989:INFO:Initializing save_model()
2023-08-08 14:23:42,989:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), model_name=regression_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-08-08 14:23:42,989:INFO:Adding model into prep_pipe
2023-08-08 14:23:42,989:WARNING:Only Model saved as it was a pipeline.
2023-08-08 14:23:43,007:INFO:regression_model.pkl saved in current working directory
2023-08-08 14:23:43,060:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))])
2023-08-08 14:23:43,060:INFO:save_model() successfully completed......................................
2023-08-08 14:34:02,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 14:34:02,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 14:34:02,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 14:34:02,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 14:34:03,984:INFO:Initializing load_model()
2023-08-08 14:34:03,984:INFO:load_model(model_name=regression_model, platform=None, authentication=None, verbose=True)
2023-08-08 14:34:29,313:INFO:Initializing predict_model()
2023-08-08 14:34:29,313:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A17BF69C30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A17C064820>)
2023-08-08 14:34:29,314:INFO:Checking exceptions
2023-08-08 14:34:29,314:INFO:Preloading libraries
2023-08-08 14:34:29,315:INFO:Set up data.
2023-08-08 14:34:29,323:INFO:Set up index.
2023-08-08 23:18:16,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 23:18:16,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 23:18:16,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 23:18:16,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-08 23:18:19,072:INFO:Initializing load_model()
2023-08-08 23:18:19,072:INFO:load_model(model_name=regression_model, platform=None, authentication=None, verbose=True)
2023-08-08 23:18:25,479:INFO:Initializing predict_model()
2023-08-08 23:18:25,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002146D4F7040>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['smoker', 'sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWr...
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 GradientBoostingRegressor(learning_rate=0.05, random_state=145,
                                           subsample=0.9))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002146D56A0E0>)
2023-08-08 23:18:25,479:INFO:Checking exceptions
2023-08-08 23:18:25,479:INFO:Preloading libraries
2023-08-08 23:18:25,482:INFO:Set up data.
2023-08-08 23:18:25,494:INFO:Set up index.
